import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, a as validate_slots, e as element, U as text, b as space, f as claim_element, g as children, V as claim_text, h as detach_dev, j as claim_space, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, B as noop } from './client.0471a3bc.js';

/* src/routes/readme.svelte generated by Svelte v3.20.1 */

const file = "src/routes/readme.svelte";

function create_fragment(ctx) {
	let h1;
	let t0;
	let t1;
	let p0;
	let strong0;
	let em0;
	let t2;
	let t3;
	let p1;
	let em1;
	let t4;
	let t5;
	let p2;
	let t6;
	let t7;
	let h20;
	let t8;
	let t9;
	let blockquote;
	let pre0;
	let code0;
	let t10;
	let span0;
	let t11;
	let t12;
	let span1;
	let t13;
	let t14;
	let h21;
	let t15;
	let t16;
	let p3;
	let t17;
	let strong1;
	let em2;
	let t18;
	let t19;
	let t20;
	let h22;
	let t21;
	let t22;
	let h30;
	let t23;
	let t24;
	let ol;
	let li0;
	let t25;
	let t26;
	let li1;
	let t27;
	let code1;
	let t28;
	let t29_value = (Fullpage, FullpageSection, FullpageSlide) + "";
	let t29;
	let t30;
	let t31;
	let t32;
	let li2;
	let t33;
	let code2;
	let t34;
	let t35;
	let code3;
	let t36;
	let t37;
	let t38;
	let li3;
	let t39;
	let code4;
	let t40;
	let t41;
	let t42;
	let code5;
	let t43;
	let t44;
	let t45;
	let t46;
	let li4;
	let t47;
	let code6;
	let t48;
	let t49;
	let code7;
	let t50;
	let t51;
	let code8;
	let t52;
	let t53;
	let t54;
	let h31;
	let t55;
	let t56;
	let pre1;
	let code9;
	let span8;
	let span3;
	let t57;
	let span2;
	let t58;
	let t59;
	let span7;
	let span4;
	let t60;
	let t61;
	let span6;
	let span5;
	let t62;
	let t63;
	let span9;
	let t64_value = (Fullpage, FullpageSection, FullpageSlide) + "";
	let t64;
	let span45;
	let span39;
	let span10;
	let t65;
	let t66;
	let span11;
	let t67;
	let t68;
	let span12;
	let t69;
	let t70;
	let span13;
	let t71;
	let t72;
	let span14;
	let t73;
	let t74;
	let span15;
	let t75;
	let t76;
	let span16;
	let t77;
	let t78;
	let span17;
	let t79;
	let t80;
	let span18;
	let t81;
	let t82;
	let span19;
	let t83;
	let t84;
	let span20;
	let t85;
	let t86;
	let span21;
	let t87;
	let t88;
	let span22;
	let t89;
	let t90;
	let span23;
	let t91;
	let t92;
	let span24;
	let t93;
	let t94;
	let span25;
	let t95;
	let t96;
	let span26;
	let t97;
	let t98;
	let span27;
	let t99;
	let t100;
	let span28;
	let t101;
	let t102;
	let span29;
	let t103;
	let t104;
	let span30;
	let t105;
	let t106;
	let span31;
	let t107;
	let t108;
	let span32;
	let t109;
	let t110;
	let span33;
	let t111;
	let t112;
	let span34;
	let t113;
	let t114;
	let span35;
	let t115;
	let t116;
	let span36;
	let t117;
	let t118;
	let span37;
	let t119;
	let t120;
	let span38;
	let t121;
	let t122;
	let span41;
	let t123;
	let span40;
	let t124;
	let t125;
	let t126;
	let span44;
	let t127;
	let span42;
	let t128;
	let t129;
	let span43;
	let t130;
	let t131;
	let span46;
	let t132;
	let span63;
	let span48;
	let span47;
	let t133;
	let t134;
	let t135;
	let span54;
	let t136;
	let span49;
	let t137;
	let t138;
	let span50;
	let t139;
	let t140;
	let span51;
	let t141;
	let t142;
	let span52;
	let t143;
	let t144;
	let span53;
	let t145;
	let t146;
	let t147;
	let span56;
	let t148;
	let span55;
	let t149;
	let t150;
	let t151;
	let span62;
	let t152;
	let span57;
	let t153;
	let t154;
	let span58;
	let t155;
	let t156;
	let span59;
	let t157;
	let t158;
	let span60;
	let t159;
	let t160;
	let span61;
	let t161;
	let t162;
	let span64;
	let t163;
	let span106;
	let span66;
	let span65;
	let t164;
	let t165;
	let t166;
	let span71;
	let t167;
	let span67;
	let t168;
	let t169;
	let span68;
	let t170;
	let t171;
	let span69;
	let t172;
	let t173;
	let span70;
	let t174;
	let t175;
	let t176;
	let span73;
	let t177;
	let span72;
	let t178;
	let t179;
	let t180;
	let span78;
	let t181;
	let span74;
	let t182;
	let t183;
	let span75;
	let t184;
	let t185;
	let span76;
	let t186;
	let t187;
	let span77;
	let t188;
	let t189;
	let t190;
	let span80;
	let t191;
	let span79;
	let t192;
	let t193;
	let t194;
	let span85;
	let t195;
	let span81;
	let t196;
	let t197;
	let span82;
	let t198;
	let t199;
	let span83;
	let t200;
	let t201;
	let span84;
	let t202;
	let t203;
	let t204;
	let span87;
	let t205;
	let span86;
	let t206;
	let t207;
	let t208;
	let span89;
	let t209;
	let span88;
	let t210;
	let t211;
	let t212;
	let span94;
	let t213;
	let span90;
	let t214;
	let t215;
	let span91;
	let t216;
	let t217;
	let span92;
	let t218;
	let t219;
	let span93;
	let t220;
	let t221;
	let t222;
	let span96;
	let t223;
	let span95;
	let t224;
	let t225;
	let t226;
	let span101;
	let t227;
	let span97;
	let t228;
	let t229;
	let span98;
	let t230;
	let t231;
	let span99;
	let t232;
	let t233;
	let span100;
	let t234;
	let t235;
	let t236;
	let span103;
	let t237;
	let span102;
	let t238;
	let t239;
	let t240;
	let span105;
	let t241;
	let span104;
	let t242;
	let t243;
	let t244;
	let h32;
	let t245;
	let t246;
	let p4;
	let t247;
	let t248;
	let h40;
	let t249;
	let t250;
	let p5;
	let t251;
	let t252;
	let ul0;
	let li5;
	let strong2;
	let t253;
	let t254;
	let code10;
	let t255;
	let t256;
	let t257;
	let li6;
	let strong3;
	let t258;
	let t259;
	let code11;
	let t260;
	let t261;
	let t262;
	let li7;
	let strong4;
	let t263;
	let t264;
	let code12;
	let t265;
	let t266;
	let t267;
	let li8;
	let strong5;
	let t268;
	let t269;
	let code13;
	let t270;
	let t271;
	let t272;
	let li9;
	let strong6;
	let t273;
	let t274;
	let code14;
	let t275;
	let t276;
	let t277;
	let li10;
	let strong7;
	let t278;
	let t279;
	let code15;
	let t280;
	let t281;
	let t282;
	let li11;
	let strong8;
	let t283;
	let t284;
	let code16;
	let t285;
	let t286;
	let t287;
	let h41;
	let t288;
	let t289;
	let p6;
	let t290;
	let t291;
	let ul1;
	let li12;
	let strong9;
	let t292;
	let t293;
	let code17;
	let t294;
	let t295;
	let t296;
	let li13;
	let strong10;
	let t297;
	let t298;
	let code18;
	let t299;
	let t300;
	let t301;
	let li14;
	let strong11;
	let t302;
	let t303;
	let code19;
	let t304;
	let t305;
	let t306;
	let li15;
	let strong12;
	let t307;
	let t308;
	let code20;
	let t309;
	let t310;
	let t311;
	let li16;
	let strong13;
	let t312;
	let t313;
	let code21;
	let t314;
	let t315;
	let t316;
	let li17;
	let strong14;
	let t317;
	let t318;
	let code22;
	let t319;
	let t320;
	let t321;
	let li18;
	let strong15;
	let t322;
	let t323;
	let code23;
	let t324;
	let t325;
	let t326;
	let li19;
	let strong16;
	let t327;
	let t328;
	let code24;
	let t329;
	let t330;
	let t331;
	let li20;
	let strong17;
	let t332;
	let t333;
	let code25;
	let t334;
	let t335;
	let t336;
	let li21;
	let strong18;
	let t337;
	let t338;
	let code26;
	let t339;
	let t340;
	let t341;
	let li22;
	let strong19;
	let t342;
	let t343;
	let code27;
	let t344;
	let t345;
	let t346;
	let p7;
	let strong20;
	let em3;
	let t347;
	let t348;
	let h42;
	let t349;
	let t350;
	let p8;
	let t351;
	let t352;
	let ul2;
	let li23;
	let strong21;
	let t353;
	let t354;
	let code28;
	let t355;
	let t356;
	let t357;
	let li24;
	let strong22;
	let t358;
	let t359;
	let code29;
	let t360;
	let t361;
	let t362;
	let li25;
	let strong23;
	let t363;
	let t364;
	let code30;
	let t365;
	let t366;
	let t367;
	let li26;
	let strong24;
	let t368;
	let t369;
	let code31;
	let t370;
	let t371;
	let t372;
	let li27;
	let strong25;
	let t373;
	let t374;
	let code32;
	let t375;
	let t376;
	let t377;
	let li28;
	let strong26;
	let t378;
	let t379;
	let code33;
	let t380;
	let t381;
	let t382;
	let li29;
	let strong27;
	let t383;
	let t384;
	let code34;
	let t385;
	let t386;
	let t387;
	let h23;
	let t388;
	let t389;
	let h33;
	let t390;
	let t391;
	let p9;
	let t392;

	const block = {
		c: function create() {
			h1 = element("h1");
			t0 = text("Svelte-fullpage");
			t1 = space();
			p0 = element("p");
			strong0 = element("strong");
			em0 = element("em");
			t2 = text("In development");
			t3 = space();
			p1 = element("p");
			em1 = element("em");
			t4 = text("5.5kB gZipped, unzipped 14.9kB");
			t5 = space();
			p2 = element("p");
			t6 = text("Lightweight fullpage Svelte component, no vanilla JS or FullPage.js, just pure Svelte component. There is also support for\n    mobile devices. Tested on Svelte and Sapper. Note that this component is in development, expect bugs, if you notice some,\n    please report them to this component's GitHub repo to the 'Issues' section.");
			t7 = space();
			h20 = element("h2");
			t8 = text("Instalation");
			t9 = space();
			blockquote = element("blockquote");
			pre0 = element("pre");
			code0 = element("code");
			t10 = text("npm i svelte-fullpage --");
			span0 = element("span");
			t11 = text("save");
			t12 = text("-");
			span1 = element("span");
			t13 = text("dev");
			t14 = space();
			h21 = element("h2");
			t15 = text("Versions of this component");
			t16 = space();
			p3 = element("p");
			t17 = text("In previous ");
			strong1 = element("strong");
			em2 = element("em");
			t18 = text("module version");
			t19 = text(" (0.1.1) there were 2 versions of component, static and dynamic, but it turned out that dynamic\n    version is redundant and overall worse than static, so it is no longer part of this module. This component is meant to be\n    lightweight so bundle size must be as small as possible.");
			t20 = space();
			h22 = element("h2");
			t21 = text("How to use");
			t22 = space();
			h30 = element("h3");
			t23 = text("Static version");
			t24 = space();
			ol = element("ol");
			li0 = element("li");
			t25 = text("Make Svelte page");
			t26 = space();
			li1 = element("li");
			t27 = text("Include ");
			code1 = element("code");
			t28 = text("import ");
			t29 = text(t29_value);
			t30 = text(" from 'svelte-fullpage';");
			t31 = text(" into mentioned file.");
			t32 = space();
			li2 = element("li");
			t33 = text("Make fullpage sections and put them into ");
			code2 = element("code");
			t34 = text("<Fullpage>");
			t35 = text(", if you need slides, make them too and put them into some ");
			code3 = element("code");
			t36 = text("<FullpageSection>");
			t37 = text(".");
			t38 = space();
			li3 = element("li");
			t39 = text("Define new arrays that will contain all names of all sections and slides, insert them into Fullpage or FullpageSection\n        component, example ");
			code4 = element("code");
			t40 = text("<Fullpage sections=");
			t41 = text(myFullpageSectionsNames);
			t42 = text(" or ");
			code5 = element("code");
			t43 = text("<FullpageSlide slides=");
			t44 = text(myFullpageSlidesNames);
			t45 = text(".");
			t46 = space();
			li4 = element("li");
			t47 = text("You can check if everything is working, if you use Sapper, don't forget to make this component SSR, just include\n        it like this ");
			code6 = element("code");
			t48 = text("import Fullpage from 'svelte-fullpage/src/Fullpage.svelte'");
			t49 = text(" and section as well\n        ");
			code7 = element("code");
			t50 = text("import FullpageSection from 'svelte-fullpage/src/FullpageSection.svelte'");
			t51 = text(" also slides\n        ");
			code8 = element("code");
			t52 = text("import FullpageSlide from 'svelte-fullpage/src/FullpageSlide.svelte'");
			t53 = text(".");
			t54 = space();
			h31 = element("h3");
			t55 = text("Something copyable");
			t56 = space();
			pre1 = element("pre");
			code9 = element("code");
			span8 = element("span");
			span3 = element("span");
			t57 = text("<");
			span2 = element("span");
			t58 = text("script");
			t59 = text(">");
			span7 = element("span");
			span4 = element("span");
			t60 = text("//Svelte import");
			t61 = text("\n    ");
			span6 = element("span");
			span5 = element("span");
			t62 = text("import");
			t63 = text(" ");
			span9 = element("span");
			t64 = text(t64_value);
			span45 = element("span");
			span39 = element("span");
			span10 = element("span");
			t65 = text("from");
			t66 = text(" ");
			span11 = element("span");
			t67 = text("'svelte-fullpage'");
			t68 = text(";\n    ");
			span12 = element("span");
			t69 = text("//Sapper import");
			t70 = text("\n    ");
			span13 = element("span");
			t71 = text("import");
			t72 = text(" Fullpage ");
			span14 = element("span");
			t73 = text("from");
			t74 = text(" ");
			span15 = element("span");
			t75 = text("'svelte-fullpage/src/Fullpage.svelte'");
			t76 = text(";\n    ");
			span16 = element("span");
			t77 = text("import");
			t78 = text(" FullpageSection ");
			span17 = element("span");
			t79 = text("from");
			t80 = text(" ");
			span18 = element("span");
			t81 = text("'svelte-fullpage/src/FullpageSection.svelte'");
			t82 = text("\n    ");
			span19 = element("span");
			t83 = text("import");
			t84 = text(" FullpageSlide ");
			span20 = element("span");
			t85 = text("from");
			t86 = text(" ");
			span21 = element("span");
			t87 = text("'svelte-fullpage/src/FullpageSlide.svelte'");
			t88 = text(";\n\n    ");
			span22 = element("span");
			t89 = text("//Include all titles of your sections, this is also used as number that indicate count of sections");
			t90 = text("\n    ");
			span23 = element("span");
			t91 = text("const");
			t92 = text(" sections = [\n        ");
			span24 = element("span");
			t93 = text("'Home'");
			t94 = text(",\n        ");
			span25 = element("span");
			t95 = text("'History'");
			t96 = text(",\n        ");
			span26 = element("span");
			t97 = text("'Present'");
			t98 = text(",\n        ");
			span27 = element("span");
			t99 = text("'Future'");
			t100 = text("\n    ];\n    ");
			span28 = element("span");
			t101 = text("//Have to set to 0 (or section you wish to display as default), otherwise section will not display");
			t102 = text("\n    ");
			span29 = element("span");
			t103 = text("let");
			t104 = text(" activeSection = ");
			span30 = element("span");
			t105 = text("0");
			t106 = text(";\n\n    ");
			span31 = element("span");
			t107 = text("//Same mechanics as in sections");
			t108 = text("\n    ");
			span32 = element("span");
			t109 = text("const");
			t110 = text(" slides = [\n        ");
			span33 = element("span");
			t111 = text("'1982-1993'");
			t112 = text(",\n        ");
			span34 = element("span");
			t113 = text("'1993-2006'");
			t114 = text(",\n        ");
			span35 = element("span");
			t115 = text("'2006-present'");
			t116 = text("\n    ];\n    ");
			span36 = element("span");
			t117 = text("//Also has to be 0 or specific id of slide");
			t118 = text("\n    ");
			span37 = element("span");
			t119 = text("let");
			t120 = text(" activeSlide = ");
			span38 = element("span");
			t121 = text("0");
			t122 = text(";\n");
			span41 = element("span");
			t123 = text("</");
			span40 = element("span");
			t124 = text("script");
			t125 = text(">");
			t126 = text("\n\n");
			span44 = element("span");
			t127 = text("<");
			span42 = element("span");
			t128 = text("Fullpage");
			t129 = text(" ");
			span43 = element("span");
			t130 = text("bind:activeSection");
			t131 = text(" ");
			span46 = element("span");
			t132 = text(sections);
			span63 = element("span");
			span48 = element("span");
			span47 = element("span");
			t133 = text("arrows");
			t134 = text(">");
			t135 = text("\n    ");
			span54 = element("span");
			t136 = text("<");
			span49 = element("span");
			t137 = text("FullpageSection");
			t138 = text(" ");
			span50 = element("span");
			t139 = text("sectionId");
			t140 = text("=");
			span51 = element("span");
			t141 = text("\"0\"");
			t142 = text(" ");
			span52 = element("span");
			t143 = text("bind:activeSection");
			t144 = text(" ");
			span53 = element("span");
			t145 = text("center");
			t146 = text(">");
			t147 = text("\n        ...Your markup here\n    ");
			span56 = element("span");
			t148 = text("</");
			span55 = element("span");
			t149 = text("FullpageSection");
			t150 = text(">");
			t151 = text("\n    ");
			span62 = element("span");
			t152 = text("<");
			span57 = element("span");
			t153 = text("FullpageSection");
			t154 = text(" ");
			span58 = element("span");
			t155 = text("sectionId");
			t156 = text("=");
			span59 = element("span");
			t157 = text("\"1\"");
			t158 = text(" ");
			span60 = element("span");
			t159 = text("bind:activeSection");
			t160 = text(" ");
			span61 = element("span");
			t161 = text("bind:activeSlide");
			t162 = text(" ");
			span64 = element("span");
			t163 = text(slides);
			span106 = element("span");
			span66 = element("span");
			span65 = element("span");
			t164 = text("arrows");
			t165 = text(">");
			t166 = text("\n        ");
			span71 = element("span");
			t167 = text("<");
			span67 = element("span");
			t168 = text("FullpageSlide");
			t169 = text(" ");
			span68 = element("span");
			t170 = text("slideId");
			t171 = text("=");
			span69 = element("span");
			t172 = text("\"0\"");
			t173 = text(" ");
			span70 = element("span");
			t174 = text("bind:activeSlide");
			t175 = text(">");
			t176 = text("\n            ...Your markup here\n        ");
			span73 = element("span");
			t177 = text("</");
			span72 = element("span");
			t178 = text("FullpageSlide");
			t179 = text(">");
			t180 = text("\n        ");
			span78 = element("span");
			t181 = text("<");
			span74 = element("span");
			t182 = text("FullpageSlide");
			t183 = text(" ");
			span75 = element("span");
			t184 = text("slideId");
			t185 = text("=");
			span76 = element("span");
			t186 = text("\"1\"");
			t187 = text(" ");
			span77 = element("span");
			t188 = text("bind:activeSlide");
			t189 = text(">");
			t190 = text("\n            ...Your markup here\n        ");
			span80 = element("span");
			t191 = text("</");
			span79 = element("span");
			t192 = text("FullpageSlide");
			t193 = text(">");
			t194 = text("\n        ");
			span85 = element("span");
			t195 = text("<");
			span81 = element("span");
			t196 = text("FullpageSlide");
			t197 = text(" ");
			span82 = element("span");
			t198 = text("slideId");
			t199 = text("=");
			span83 = element("span");
			t200 = text("\"2\"");
			t201 = text(" ");
			span84 = element("span");
			t202 = text("bind:activeSlide");
			t203 = text(">");
			t204 = text("\n            ...Your markup here\n        ");
			span87 = element("span");
			t205 = text("</");
			span86 = element("span");
			t206 = text("FullpageSlide");
			t207 = text(">");
			t208 = text("\n    ");
			span89 = element("span");
			t209 = text("</");
			span88 = element("span");
			t210 = text("FullpageSection");
			t211 = text(">");
			t212 = text("\n    ");
			span94 = element("span");
			t213 = text("<");
			span90 = element("span");
			t214 = text("FullpageSection");
			t215 = text(" ");
			span91 = element("span");
			t216 = text("sectionId");
			t217 = text("=");
			span92 = element("span");
			t218 = text("\"2\"");
			t219 = text(" ");
			span93 = element("span");
			t220 = text("bind:activeSection");
			t221 = text(">");
			t222 = text("\n        ...Your markup here\n    ");
			span96 = element("span");
			t223 = text("</");
			span95 = element("span");
			t224 = text("FullpageSection");
			t225 = text(">");
			t226 = text("\n    ");
			span101 = element("span");
			t227 = text("<");
			span97 = element("span");
			t228 = text("FullpageSection");
			t229 = text(" ");
			span98 = element("span");
			t230 = text("sectionId");
			t231 = text("=");
			span99 = element("span");
			t232 = text("\"3\"");
			t233 = text(" ");
			span100 = element("span");
			t234 = text("bind:activeSection");
			t235 = text(">");
			t236 = text("\n        ...Your markup here\n    ");
			span103 = element("span");
			t237 = text("</");
			span102 = element("span");
			t238 = text("FullpageSection");
			t239 = text(">");
			t240 = text("\n");
			span105 = element("span");
			t241 = text("</");
			span104 = element("span");
			t242 = text("Fullpage");
			t243 = text(">");
			t244 = space();
			h32 = element("h3");
			t245 = text("Tweaks");
			t246 = space();
			p4 = element("p");
			t247 = text("So, there are options for customizing your fullpage component.");
			t248 = space();
			h40 = element("h4");
			t249 = text("Fullpage");
			t250 = space();
			p5 = element("p");
			t251 = text("These props are customizable:");
			t252 = space();
			ul0 = element("ul");
			li5 = element("li");
			strong2 = element("strong");
			t253 = text("class");
			t254 = text(" - ");
			code10 = element("code");
			t255 = text("string");
			t256 = text(" - Standard HTML class");
			t257 = space();
			li6 = element("li");
			strong3 = element("strong");
			t258 = text("style");
			t259 = text(" - ");
			code11 = element("code");
			t260 = text("string");
			t261 = text(" - Standard HTML style");
			t262 = space();
			li7 = element("li");
			strong4 = element("strong");
			t263 = text("sections");
			t264 = text(" - ");
			code12 = element("code");
			t265 = text("array");
			t266 = text(" - Array containing FullpageSection components/names");
			t267 = space();
			li8 = element("li");
			strong5 = element("strong");
			t268 = text("activeSection");
			t269 = text(" - ");
			code13 = element("code");
			t270 = text("number");
			t271 = text(" - Number that points set visibility of sections.");
			t272 = space();
			li9 = element("li");
			strong6 = element("strong");
			t273 = text("transitionDuration");
			t274 = text(" - ");
			code14 = element("code");
			t275 = text("number");
			t276 = text(" - Duration of transition between sections");
			t277 = space();
			li10 = element("li");
			strong7 = element("strong");
			t278 = text("arrows");
			t279 = text(" - ");
			code15 = element("code");
			t280 = text("boolean");
			t281 = text(" - Adds support for scrolling using arrows");
			t282 = space();
			li11 = element("li");
			strong8 = element("strong");
			t283 = text("drag");
			t284 = text(" - ");
			code16 = element("code");
			t285 = text("boolean");
			t286 = text(" - Allows scrolling using mouse drag");
			t287 = space();
			h41 = element("h4");
			t288 = text("FullpageSection");
			t289 = space();
			p6 = element("p");
			t290 = text("These props are customizable:");
			t291 = space();
			ul1 = element("ul");
			li12 = element("li");
			strong9 = element("strong");
			t292 = text("class");
			t293 = text(" - ");
			code17 = element("code");
			t294 = text("string");
			t295 = text(" - Standard HTML class");
			t296 = space();
			li13 = element("li");
			strong10 = element("strong");
			t297 = text("style");
			t298 = text(" - ");
			code18 = element("code");
			t299 = text("string");
			t300 = text(" - Standard HTML style");
			t301 = space();
			li14 = element("li");
			strong11 = element("strong");
			t302 = text("sectionId");
			t303 = text(" - ");
			code19 = element("code");
			t304 = text("number/string");
			t305 = text(" - Id of section, feel free to enter there string, component will parse it to the number");
			t306 = space();
			li15 = element("li");
			strong12 = element("strong");
			t307 = text("activeSection");
			t308 = text(" - ");
			code20 = element("code");
			t309 = text("number");
			t310 = text(" - Number that tells section if is visible");
			t311 = space();
			li16 = element("li");
			strong13 = element("strong");
			t312 = text("slides");
			t313 = text(" - ");
			code21 = element("code");
			t314 = text("array");
			t315 = text(" - Array containing FullpageSlide components/names, if there are some");
			t316 = space();
			li17 = element("li");
			strong14 = element("strong");
			t317 = text("activeSlide");
			t318 = text(" - ");
			code22 = element("code");
			t319 = text("string");
			t320 = text(" - Number that tells slide if is visible");
			t321 = space();
			li18 = element("li");
			strong15 = element("strong");
			t322 = text("center");
			t323 = text(" - ");
			code23 = element("code");
			t324 = text("boolean");
			t325 = text(" - Centering content using flexbox");
			t326 = space();
			li19 = element("li");
			strong16 = element("strong");
			t327 = text("arrows");
			t328 = text(" - ");
			code24 = element("code");
			t329 = text("boolean");
			t330 = text(" - Adds support for sliding using arrows");
			t331 = space();
			li20 = element("li");
			strong17 = element("strong");
			t332 = text("select");
			t333 = text(" - ");
			code25 = element("code");
			t334 = text("boolean");
			t335 = text(" - Enables highlighting");
			t336 = space();
			li21 = element("li");
			strong18 = element("strong");
			t337 = text("transitionDuration");
			t338 = text(" - ");
			code26 = element("code");
			t339 = text("number");
			t340 = text(" - Duration of transition between slides, if you want to edit it, edit it here rather than in\n        transition prop, because this alters cooldown between transitions.");
			t341 = space();
			li22 = element("li");
			strong19 = element("strong");
			t342 = text("transition");
			t343 = text(" - ");
			code27 = element("code");
			t344 = text("object");
			t345 = text(" - Options for transitionOut between this sections");
			t346 = space();
			p7 = element("p");
			strong20 = element("strong");
			em3 = element("em");
			t347 = text("*These transitions are Svelte transitions, you can change only options, not type of\n    animation, because I hard-coded it there :D, may change in future .");
			t348 = space();
			h42 = element("h4");
			t349 = text("FullpageSlide");
			t350 = space();
			p8 = element("p");
			t351 = text("These props are customizable:");
			t352 = space();
			ul2 = element("ul");
			li23 = element("li");
			strong21 = element("strong");
			t353 = text("class");
			t354 = text(" - ");
			code28 = element("code");
			t355 = text("string");
			t356 = text(" - Standard HTML class");
			t357 = space();
			li24 = element("li");
			strong22 = element("strong");
			t358 = text("style");
			t359 = text(" - ");
			code29 = element("code");
			t360 = text("string");
			t361 = text(" - Standard HTML style");
			t362 = space();
			li25 = element("li");
			strong23 = element("strong");
			t363 = text("slideId");
			t364 = text(" - ");
			code30 = element("code");
			t365 = text("number/string");
			t366 = text(" - Id of slide, same as section id, but this for slide, obviously");
			t367 = space();
			li26 = element("li");
			strong24 = element("strong");
			t368 = text("activeSlide");
			t369 = text(" - ");
			code31 = element("code");
			t370 = text("string");
			t371 = text(" - Number that tells slide if is visible");
			t372 = space();
			li27 = element("li");
			strong25 = element("strong");
			t373 = text("center");
			t374 = text(" - ");
			code32 = element("code");
			t375 = text("number");
			t376 = text(" - Centering content using flexbox");
			t377 = space();
			li28 = element("li");
			strong26 = element("strong");
			t378 = text("transitionIn");
			t379 = text(" - ");
			code33 = element("code");
			t380 = text("object");
			t381 = text(" - Options for transitionIn between this slides");
			t382 = space();
			li29 = element("li");
			strong27 = element("strong");
			t383 = text("transitionOut");
			t384 = text(" - ");
			code34 = element("code");
			t385 = text("object");
			t386 = text(" - Options for transitionOut between this slides");
			t387 = space();
			h23 = element("h2");
			t388 = text("License");
			t389 = space();
			h33 = element("h3");
			t390 = text("It's free");
			t391 = space();
			p9 = element("p");
			t392 = text("This component is under MIT license.");
			this.h();
		},
		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { id: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Svelte-fullpage");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p0 = claim_element(nodes, "P", {});
			var p0_nodes = children(p0);
			strong0 = claim_element(p0_nodes, "STRONG", {});
			var strong0_nodes = children(strong0);
			em0 = claim_element(strong0_nodes, "EM", {});
			var em0_nodes = children(em0);
			t2 = claim_text(em0_nodes, "In development");
			em0_nodes.forEach(detach_dev);
			strong0_nodes.forEach(detach_dev);
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			p1 = claim_element(nodes, "P", {});
			var p1_nodes = children(p1);
			em1 = claim_element(p1_nodes, "EM", {});
			var em1_nodes = children(em1);
			t4 = claim_text(em1_nodes, "5.5kB gZipped, unzipped 14.9kB");
			em1_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			p2 = claim_element(nodes, "P", {});
			var p2_nodes = children(p2);
			t6 = claim_text(p2_nodes, "Lightweight fullpage Svelte component, no vanilla JS or FullPage.js, just pure Svelte component. There is also support for\n    mobile devices. Tested on Svelte and Sapper. Note that this component is in development, expect bugs, if you notice some,\n    please report them to this component's GitHub repo to the 'Issues' section.");
			p2_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			h20 = claim_element(nodes, "H2", { id: true });
			var h20_nodes = children(h20);
			t8 = claim_text(h20_nodes, "Instalation");
			h20_nodes.forEach(detach_dev);
			t9 = claim_space(nodes);
			blockquote = claim_element(nodes, "BLOCKQUOTE", {});
			var blockquote_nodes = children(blockquote);
			pre0 = claim_element(blockquote_nodes, "PRE", {});
			var pre0_nodes = children(pre0);
			code0 = claim_element(pre0_nodes, "CODE", { class: true });
			var code0_nodes = children(code0);
			t10 = claim_text(code0_nodes, "npm i svelte-fullpage --");
			span0 = claim_element(code0_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t11 = claim_text(span0_nodes, "save");
			span0_nodes.forEach(detach_dev);
			t12 = claim_text(code0_nodes, "-");
			span1 = claim_element(code0_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t13 = claim_text(span1_nodes, "dev");
			span1_nodes.forEach(detach_dev);
			code0_nodes.forEach(detach_dev);
			pre0_nodes.forEach(detach_dev);
			blockquote_nodes.forEach(detach_dev);
			t14 = claim_space(nodes);
			h21 = claim_element(nodes, "H2", { id: true });
			var h21_nodes = children(h21);
			t15 = claim_text(h21_nodes, "Versions of this component");
			h21_nodes.forEach(detach_dev);
			t16 = claim_space(nodes);
			p3 = claim_element(nodes, "P", {});
			var p3_nodes = children(p3);
			t17 = claim_text(p3_nodes, "In previous ");
			strong1 = claim_element(p3_nodes, "STRONG", {});
			var strong1_nodes = children(strong1);
			em2 = claim_element(strong1_nodes, "EM", {});
			var em2_nodes = children(em2);
			t18 = claim_text(em2_nodes, "module version");
			em2_nodes.forEach(detach_dev);
			strong1_nodes.forEach(detach_dev);
			t19 = claim_text(p3_nodes, " (0.1.1) there were 2 versions of component, static and dynamic, but it turned out that dynamic\n    version is redundant and overall worse than static, so it is no longer part of this module. This component is meant to be\n    lightweight so bundle size must be as small as possible.");
			p3_nodes.forEach(detach_dev);
			t20 = claim_space(nodes);
			h22 = claim_element(nodes, "H2", { id: true });
			var h22_nodes = children(h22);
			t21 = claim_text(h22_nodes, "How to use");
			h22_nodes.forEach(detach_dev);
			t22 = claim_space(nodes);
			h30 = claim_element(nodes, "H3", { id: true });
			var h30_nodes = children(h30);
			t23 = claim_text(h30_nodes, "Static version");
			h30_nodes.forEach(detach_dev);
			t24 = claim_space(nodes);
			ol = claim_element(nodes, "OL", {});
			var ol_nodes = children(ol);
			li0 = claim_element(ol_nodes, "LI", {});
			var li0_nodes = children(li0);
			t25 = claim_text(li0_nodes, "Make Svelte page");
			li0_nodes.forEach(detach_dev);
			t26 = claim_space(ol_nodes);
			li1 = claim_element(ol_nodes, "LI", {});
			var li1_nodes = children(li1);
			t27 = claim_text(li1_nodes, "Include ");
			code1 = claim_element(li1_nodes, "CODE", {});
			var code1_nodes = children(code1);
			t28 = claim_text(code1_nodes, "import ");
			t29 = claim_text(code1_nodes, t29_value);
			t30 = claim_text(code1_nodes, " from 'svelte-fullpage';");
			code1_nodes.forEach(detach_dev);
			t31 = claim_text(li1_nodes, " into mentioned file.");
			li1_nodes.forEach(detach_dev);
			t32 = claim_space(ol_nodes);
			li2 = claim_element(ol_nodes, "LI", {});
			var li2_nodes = children(li2);
			t33 = claim_text(li2_nodes, "Make fullpage sections and put them into ");
			code2 = claim_element(li2_nodes, "CODE", {});
			var code2_nodes = children(code2);
			t34 = claim_text(code2_nodes, "<Fullpage>");
			code2_nodes.forEach(detach_dev);
			t35 = claim_text(li2_nodes, ", if you need slides, make them too and put them into some ");
			code3 = claim_element(li2_nodes, "CODE", {});
			var code3_nodes = children(code3);
			t36 = claim_text(code3_nodes, "<FullpageSection>");
			code3_nodes.forEach(detach_dev);
			t37 = claim_text(li2_nodes, ".");
			li2_nodes.forEach(detach_dev);
			t38 = claim_space(ol_nodes);
			li3 = claim_element(ol_nodes, "LI", {});
			var li3_nodes = children(li3);
			t39 = claim_text(li3_nodes, "Define new arrays that will contain all names of all sections and slides, insert them into Fullpage or FullpageSection\n        component, example ");
			code4 = claim_element(li3_nodes, "CODE", {});
			var code4_nodes = children(code4);
			t40 = claim_text(code4_nodes, "<Fullpage sections=");
			t41 = claim_text(code4_nodes, myFullpageSectionsNames);
			code4_nodes.forEach(detach_dev);
			t42 = claim_text(li3_nodes, " or ");
			code5 = claim_element(li3_nodes, "CODE", {});
			var code5_nodes = children(code5);
			t43 = claim_text(code5_nodes, "<FullpageSlide slides=");
			t44 = claim_text(code5_nodes, myFullpageSlidesNames);
			code5_nodes.forEach(detach_dev);
			t45 = claim_text(li3_nodes, ".");
			li3_nodes.forEach(detach_dev);
			t46 = claim_space(ol_nodes);
			li4 = claim_element(ol_nodes, "LI", {});
			var li4_nodes = children(li4);
			t47 = claim_text(li4_nodes, "You can check if everything is working, if you use Sapper, don't forget to make this component SSR, just include\n        it like this ");
			code6 = claim_element(li4_nodes, "CODE", {});
			var code6_nodes = children(code6);
			t48 = claim_text(code6_nodes, "import Fullpage from 'svelte-fullpage/src/Fullpage.svelte'");
			code6_nodes.forEach(detach_dev);
			t49 = claim_text(li4_nodes, " and section as well\n        ");
			code7 = claim_element(li4_nodes, "CODE", {});
			var code7_nodes = children(code7);
			t50 = claim_text(code7_nodes, "import FullpageSection from 'svelte-fullpage/src/FullpageSection.svelte'");
			code7_nodes.forEach(detach_dev);
			t51 = claim_text(li4_nodes, " also slides\n        ");
			code8 = claim_element(li4_nodes, "CODE", {});
			var code8_nodes = children(code8);
			t52 = claim_text(code8_nodes, "import FullpageSlide from 'svelte-fullpage/src/FullpageSlide.svelte'");
			code8_nodes.forEach(detach_dev);
			t53 = claim_text(li4_nodes, ".");
			li4_nodes.forEach(detach_dev);
			ol_nodes.forEach(detach_dev);
			t54 = claim_space(nodes);
			h31 = claim_element(nodes, "H3", { id: true });
			var h31_nodes = children(h31);
			t55 = claim_text(h31_nodes, "Something copyable");
			h31_nodes.forEach(detach_dev);
			t56 = claim_space(nodes);
			pre1 = claim_element(nodes, "PRE", {});
			var pre1_nodes = children(pre1);
			code9 = claim_element(pre1_nodes, "CODE", { class: true });
			var code9_nodes = children(code9);
			span8 = claim_element(code9_nodes, "SPAN", { class: true });
			var span8_nodes = children(span8);
			span3 = claim_element(span8_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			t57 = claim_text(span3_nodes, "<");
			span2 = claim_element(span3_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t58 = claim_text(span2_nodes, "script");
			span2_nodes.forEach(detach_dev);
			t59 = claim_text(span3_nodes, ">");
			span3_nodes.forEach(detach_dev);
			span7 = claim_element(span8_nodes, "SPAN", { class: true });
			var span7_nodes = children(span7);
			span4 = claim_element(span7_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			t60 = claim_text(span4_nodes, "//Svelte import");
			span4_nodes.forEach(detach_dev);
			t61 = claim_text(span7_nodes, "\n    ");
			span6 = claim_element(span7_nodes, "SPAN", { class: true });
			var span6_nodes = children(span6);
			span5 = claim_element(span6_nodes, "SPAN", { class: true });
			var span5_nodes = children(span5);
			t62 = claim_text(span5_nodes, "import");
			span5_nodes.forEach(detach_dev);
			t63 = claim_text(span6_nodes, " ");
			span6_nodes.forEach(detach_dev);
			span7_nodes.forEach(detach_dev);
			span8_nodes.forEach(detach_dev);
			span9 = claim_element(code9_nodes, "SPAN", { class: true });
			var span9_nodes = children(span9);
			t64 = claim_text(span9_nodes, t64_value);
			span9_nodes.forEach(detach_dev);
			span45 = claim_element(code9_nodes, "SPAN", { class: true });
			var span45_nodes = children(span45);
			span39 = claim_element(span45_nodes, "SPAN", { class: true });
			var span39_nodes = children(span39);
			span10 = claim_element(span39_nodes, "SPAN", { class: true });
			var span10_nodes = children(span10);
			t65 = claim_text(span10_nodes, "from");
			span10_nodes.forEach(detach_dev);
			t66 = claim_text(span39_nodes, " ");
			span11 = claim_element(span39_nodes, "SPAN", { class: true });
			var span11_nodes = children(span11);
			t67 = claim_text(span11_nodes, "'svelte-fullpage'");
			span11_nodes.forEach(detach_dev);
			t68 = claim_text(span39_nodes, ";\n    ");
			span12 = claim_element(span39_nodes, "SPAN", { class: true });
			var span12_nodes = children(span12);
			t69 = claim_text(span12_nodes, "//Sapper import");
			span12_nodes.forEach(detach_dev);
			t70 = claim_text(span39_nodes, "\n    ");
			span13 = claim_element(span39_nodes, "SPAN", { class: true });
			var span13_nodes = children(span13);
			t71 = claim_text(span13_nodes, "import");
			span13_nodes.forEach(detach_dev);
			t72 = claim_text(span39_nodes, " Fullpage ");
			span14 = claim_element(span39_nodes, "SPAN", { class: true });
			var span14_nodes = children(span14);
			t73 = claim_text(span14_nodes, "from");
			span14_nodes.forEach(detach_dev);
			t74 = claim_text(span39_nodes, " ");
			span15 = claim_element(span39_nodes, "SPAN", { class: true });
			var span15_nodes = children(span15);
			t75 = claim_text(span15_nodes, "'svelte-fullpage/src/Fullpage.svelte'");
			span15_nodes.forEach(detach_dev);
			t76 = claim_text(span39_nodes, ";\n    ");
			span16 = claim_element(span39_nodes, "SPAN", { class: true });
			var span16_nodes = children(span16);
			t77 = claim_text(span16_nodes, "import");
			span16_nodes.forEach(detach_dev);
			t78 = claim_text(span39_nodes, " FullpageSection ");
			span17 = claim_element(span39_nodes, "SPAN", { class: true });
			var span17_nodes = children(span17);
			t79 = claim_text(span17_nodes, "from");
			span17_nodes.forEach(detach_dev);
			t80 = claim_text(span39_nodes, " ");
			span18 = claim_element(span39_nodes, "SPAN", { class: true });
			var span18_nodes = children(span18);
			t81 = claim_text(span18_nodes, "'svelte-fullpage/src/FullpageSection.svelte'");
			span18_nodes.forEach(detach_dev);
			t82 = claim_text(span39_nodes, "\n    ");
			span19 = claim_element(span39_nodes, "SPAN", { class: true });
			var span19_nodes = children(span19);
			t83 = claim_text(span19_nodes, "import");
			span19_nodes.forEach(detach_dev);
			t84 = claim_text(span39_nodes, " FullpageSlide ");
			span20 = claim_element(span39_nodes, "SPAN", { class: true });
			var span20_nodes = children(span20);
			t85 = claim_text(span20_nodes, "from");
			span20_nodes.forEach(detach_dev);
			t86 = claim_text(span39_nodes, " ");
			span21 = claim_element(span39_nodes, "SPAN", { class: true });
			var span21_nodes = children(span21);
			t87 = claim_text(span21_nodes, "'svelte-fullpage/src/FullpageSlide.svelte'");
			span21_nodes.forEach(detach_dev);
			t88 = claim_text(span39_nodes, ";\n\n    ");
			span22 = claim_element(span39_nodes, "SPAN", { class: true });
			var span22_nodes = children(span22);
			t89 = claim_text(span22_nodes, "//Include all titles of your sections, this is also used as number that indicate count of sections");
			span22_nodes.forEach(detach_dev);
			t90 = claim_text(span39_nodes, "\n    ");
			span23 = claim_element(span39_nodes, "SPAN", { class: true });
			var span23_nodes = children(span23);
			t91 = claim_text(span23_nodes, "const");
			span23_nodes.forEach(detach_dev);
			t92 = claim_text(span39_nodes, " sections = [\n        ");
			span24 = claim_element(span39_nodes, "SPAN", { class: true });
			var span24_nodes = children(span24);
			t93 = claim_text(span24_nodes, "'Home'");
			span24_nodes.forEach(detach_dev);
			t94 = claim_text(span39_nodes, ",\n        ");
			span25 = claim_element(span39_nodes, "SPAN", { class: true });
			var span25_nodes = children(span25);
			t95 = claim_text(span25_nodes, "'History'");
			span25_nodes.forEach(detach_dev);
			t96 = claim_text(span39_nodes, ",\n        ");
			span26 = claim_element(span39_nodes, "SPAN", { class: true });
			var span26_nodes = children(span26);
			t97 = claim_text(span26_nodes, "'Present'");
			span26_nodes.forEach(detach_dev);
			t98 = claim_text(span39_nodes, ",\n        ");
			span27 = claim_element(span39_nodes, "SPAN", { class: true });
			var span27_nodes = children(span27);
			t99 = claim_text(span27_nodes, "'Future'");
			span27_nodes.forEach(detach_dev);
			t100 = claim_text(span39_nodes, "\n    ];\n    ");
			span28 = claim_element(span39_nodes, "SPAN", { class: true });
			var span28_nodes = children(span28);
			t101 = claim_text(span28_nodes, "//Have to set to 0 (or section you wish to display as default), otherwise section will not display");
			span28_nodes.forEach(detach_dev);
			t102 = claim_text(span39_nodes, "\n    ");
			span29 = claim_element(span39_nodes, "SPAN", { class: true });
			var span29_nodes = children(span29);
			t103 = claim_text(span29_nodes, "let");
			span29_nodes.forEach(detach_dev);
			t104 = claim_text(span39_nodes, " activeSection = ");
			span30 = claim_element(span39_nodes, "SPAN", { class: true });
			var span30_nodes = children(span30);
			t105 = claim_text(span30_nodes, "0");
			span30_nodes.forEach(detach_dev);
			t106 = claim_text(span39_nodes, ";\n\n    ");
			span31 = claim_element(span39_nodes, "SPAN", { class: true });
			var span31_nodes = children(span31);
			t107 = claim_text(span31_nodes, "//Same mechanics as in sections");
			span31_nodes.forEach(detach_dev);
			t108 = claim_text(span39_nodes, "\n    ");
			span32 = claim_element(span39_nodes, "SPAN", { class: true });
			var span32_nodes = children(span32);
			t109 = claim_text(span32_nodes, "const");
			span32_nodes.forEach(detach_dev);
			t110 = claim_text(span39_nodes, " slides = [\n        ");
			span33 = claim_element(span39_nodes, "SPAN", { class: true });
			var span33_nodes = children(span33);
			t111 = claim_text(span33_nodes, "'1982-1993'");
			span33_nodes.forEach(detach_dev);
			t112 = claim_text(span39_nodes, ",\n        ");
			span34 = claim_element(span39_nodes, "SPAN", { class: true });
			var span34_nodes = children(span34);
			t113 = claim_text(span34_nodes, "'1993-2006'");
			span34_nodes.forEach(detach_dev);
			t114 = claim_text(span39_nodes, ",\n        ");
			span35 = claim_element(span39_nodes, "SPAN", { class: true });
			var span35_nodes = children(span35);
			t115 = claim_text(span35_nodes, "'2006-present'");
			span35_nodes.forEach(detach_dev);
			t116 = claim_text(span39_nodes, "\n    ];\n    ");
			span36 = claim_element(span39_nodes, "SPAN", { class: true });
			var span36_nodes = children(span36);
			t117 = claim_text(span36_nodes, "//Also has to be 0 or specific id of slide");
			span36_nodes.forEach(detach_dev);
			t118 = claim_text(span39_nodes, "\n    ");
			span37 = claim_element(span39_nodes, "SPAN", { class: true });
			var span37_nodes = children(span37);
			t119 = claim_text(span37_nodes, "let");
			span37_nodes.forEach(detach_dev);
			t120 = claim_text(span39_nodes, " activeSlide = ");
			span38 = claim_element(span39_nodes, "SPAN", { class: true });
			var span38_nodes = children(span38);
			t121 = claim_text(span38_nodes, "0");
			span38_nodes.forEach(detach_dev);
			t122 = claim_text(span39_nodes, ";\n");
			span39_nodes.forEach(detach_dev);
			span41 = claim_element(span45_nodes, "SPAN", { class: true });
			var span41_nodes = children(span41);
			t123 = claim_text(span41_nodes, "</");
			span40 = claim_element(span41_nodes, "SPAN", { class: true });
			var span40_nodes = children(span40);
			t124 = claim_text(span40_nodes, "script");
			span40_nodes.forEach(detach_dev);
			t125 = claim_text(span41_nodes, ">");
			span41_nodes.forEach(detach_dev);
			t126 = claim_text(span45_nodes, "\n\n");
			span44 = claim_element(span45_nodes, "SPAN", { class: true });
			var span44_nodes = children(span44);
			t127 = claim_text(span44_nodes, "<");
			span42 = claim_element(span44_nodes, "SPAN", { class: true });
			var span42_nodes = children(span42);
			t128 = claim_text(span42_nodes, "Fullpage");
			span42_nodes.forEach(detach_dev);
			t129 = claim_text(span44_nodes, " ");
			span43 = claim_element(span44_nodes, "SPAN", { class: true });
			var span43_nodes = children(span43);
			t130 = claim_text(span43_nodes, "bind:activeSection");
			span43_nodes.forEach(detach_dev);
			t131 = claim_text(span44_nodes, " ");
			span44_nodes.forEach(detach_dev);
			span45_nodes.forEach(detach_dev);
			span46 = claim_element(code9_nodes, "SPAN", { class: true });
			var span46_nodes = children(span46);
			t132 = claim_text(span46_nodes, sections);
			span46_nodes.forEach(detach_dev);
			span63 = claim_element(code9_nodes, "SPAN", { class: true });
			var span63_nodes = children(span63);
			span48 = claim_element(span63_nodes, "SPAN", { class: true });
			var span48_nodes = children(span48);
			span47 = claim_element(span48_nodes, "SPAN", { class: true });
			var span47_nodes = children(span47);
			t133 = claim_text(span47_nodes, "arrows");
			span47_nodes.forEach(detach_dev);
			t134 = claim_text(span48_nodes, ">");
			span48_nodes.forEach(detach_dev);
			t135 = claim_text(span63_nodes, "\n    ");
			span54 = claim_element(span63_nodes, "SPAN", { class: true });
			var span54_nodes = children(span54);
			t136 = claim_text(span54_nodes, "<");
			span49 = claim_element(span54_nodes, "SPAN", { class: true });
			var span49_nodes = children(span49);
			t137 = claim_text(span49_nodes, "FullpageSection");
			span49_nodes.forEach(detach_dev);
			t138 = claim_text(span54_nodes, " ");
			span50 = claim_element(span54_nodes, "SPAN", { class: true });
			var span50_nodes = children(span50);
			t139 = claim_text(span50_nodes, "sectionId");
			span50_nodes.forEach(detach_dev);
			t140 = claim_text(span54_nodes, "=");
			span51 = claim_element(span54_nodes, "SPAN", { class: true });
			var span51_nodes = children(span51);
			t141 = claim_text(span51_nodes, "\"0\"");
			span51_nodes.forEach(detach_dev);
			t142 = claim_text(span54_nodes, " ");
			span52 = claim_element(span54_nodes, "SPAN", { class: true });
			var span52_nodes = children(span52);
			t143 = claim_text(span52_nodes, "bind:activeSection");
			span52_nodes.forEach(detach_dev);
			t144 = claim_text(span54_nodes, " ");
			span53 = claim_element(span54_nodes, "SPAN", { class: true });
			var span53_nodes = children(span53);
			t145 = claim_text(span53_nodes, "center");
			span53_nodes.forEach(detach_dev);
			t146 = claim_text(span54_nodes, ">");
			span54_nodes.forEach(detach_dev);
			t147 = claim_text(span63_nodes, "\n        ...Your markup here\n    ");
			span56 = claim_element(span63_nodes, "SPAN", { class: true });
			var span56_nodes = children(span56);
			t148 = claim_text(span56_nodes, "</");
			span55 = claim_element(span56_nodes, "SPAN", { class: true });
			var span55_nodes = children(span55);
			t149 = claim_text(span55_nodes, "FullpageSection");
			span55_nodes.forEach(detach_dev);
			t150 = claim_text(span56_nodes, ">");
			span56_nodes.forEach(detach_dev);
			t151 = claim_text(span63_nodes, "\n    ");
			span62 = claim_element(span63_nodes, "SPAN", { class: true });
			var span62_nodes = children(span62);
			t152 = claim_text(span62_nodes, "<");
			span57 = claim_element(span62_nodes, "SPAN", { class: true });
			var span57_nodes = children(span57);
			t153 = claim_text(span57_nodes, "FullpageSection");
			span57_nodes.forEach(detach_dev);
			t154 = claim_text(span62_nodes, " ");
			span58 = claim_element(span62_nodes, "SPAN", { class: true });
			var span58_nodes = children(span58);
			t155 = claim_text(span58_nodes, "sectionId");
			span58_nodes.forEach(detach_dev);
			t156 = claim_text(span62_nodes, "=");
			span59 = claim_element(span62_nodes, "SPAN", { class: true });
			var span59_nodes = children(span59);
			t157 = claim_text(span59_nodes, "\"1\"");
			span59_nodes.forEach(detach_dev);
			t158 = claim_text(span62_nodes, " ");
			span60 = claim_element(span62_nodes, "SPAN", { class: true });
			var span60_nodes = children(span60);
			t159 = claim_text(span60_nodes, "bind:activeSection");
			span60_nodes.forEach(detach_dev);
			t160 = claim_text(span62_nodes, " ");
			span61 = claim_element(span62_nodes, "SPAN", { class: true });
			var span61_nodes = children(span61);
			t161 = claim_text(span61_nodes, "bind:activeSlide");
			span61_nodes.forEach(detach_dev);
			t162 = claim_text(span62_nodes, " ");
			span62_nodes.forEach(detach_dev);
			span63_nodes.forEach(detach_dev);
			span64 = claim_element(code9_nodes, "SPAN", { class: true });
			var span64_nodes = children(span64);
			t163 = claim_text(span64_nodes, slides);
			span64_nodes.forEach(detach_dev);
			span106 = claim_element(code9_nodes, "SPAN", { class: true });
			var span106_nodes = children(span106);
			span66 = claim_element(span106_nodes, "SPAN", { class: true });
			var span66_nodes = children(span66);
			span65 = claim_element(span66_nodes, "SPAN", { class: true });
			var span65_nodes = children(span65);
			t164 = claim_text(span65_nodes, "arrows");
			span65_nodes.forEach(detach_dev);
			t165 = claim_text(span66_nodes, ">");
			span66_nodes.forEach(detach_dev);
			t166 = claim_text(span106_nodes, "\n        ");
			span71 = claim_element(span106_nodes, "SPAN", { class: true });
			var span71_nodes = children(span71);
			t167 = claim_text(span71_nodes, "<");
			span67 = claim_element(span71_nodes, "SPAN", { class: true });
			var span67_nodes = children(span67);
			t168 = claim_text(span67_nodes, "FullpageSlide");
			span67_nodes.forEach(detach_dev);
			t169 = claim_text(span71_nodes, " ");
			span68 = claim_element(span71_nodes, "SPAN", { class: true });
			var span68_nodes = children(span68);
			t170 = claim_text(span68_nodes, "slideId");
			span68_nodes.forEach(detach_dev);
			t171 = claim_text(span71_nodes, "=");
			span69 = claim_element(span71_nodes, "SPAN", { class: true });
			var span69_nodes = children(span69);
			t172 = claim_text(span69_nodes, "\"0\"");
			span69_nodes.forEach(detach_dev);
			t173 = claim_text(span71_nodes, " ");
			span70 = claim_element(span71_nodes, "SPAN", { class: true });
			var span70_nodes = children(span70);
			t174 = claim_text(span70_nodes, "bind:activeSlide");
			span70_nodes.forEach(detach_dev);
			t175 = claim_text(span71_nodes, ">");
			span71_nodes.forEach(detach_dev);
			t176 = claim_text(span106_nodes, "\n            ...Your markup here\n        ");
			span73 = claim_element(span106_nodes, "SPAN", { class: true });
			var span73_nodes = children(span73);
			t177 = claim_text(span73_nodes, "</");
			span72 = claim_element(span73_nodes, "SPAN", { class: true });
			var span72_nodes = children(span72);
			t178 = claim_text(span72_nodes, "FullpageSlide");
			span72_nodes.forEach(detach_dev);
			t179 = claim_text(span73_nodes, ">");
			span73_nodes.forEach(detach_dev);
			t180 = claim_text(span106_nodes, "\n        ");
			span78 = claim_element(span106_nodes, "SPAN", { class: true });
			var span78_nodes = children(span78);
			t181 = claim_text(span78_nodes, "<");
			span74 = claim_element(span78_nodes, "SPAN", { class: true });
			var span74_nodes = children(span74);
			t182 = claim_text(span74_nodes, "FullpageSlide");
			span74_nodes.forEach(detach_dev);
			t183 = claim_text(span78_nodes, " ");
			span75 = claim_element(span78_nodes, "SPAN", { class: true });
			var span75_nodes = children(span75);
			t184 = claim_text(span75_nodes, "slideId");
			span75_nodes.forEach(detach_dev);
			t185 = claim_text(span78_nodes, "=");
			span76 = claim_element(span78_nodes, "SPAN", { class: true });
			var span76_nodes = children(span76);
			t186 = claim_text(span76_nodes, "\"1\"");
			span76_nodes.forEach(detach_dev);
			t187 = claim_text(span78_nodes, " ");
			span77 = claim_element(span78_nodes, "SPAN", { class: true });
			var span77_nodes = children(span77);
			t188 = claim_text(span77_nodes, "bind:activeSlide");
			span77_nodes.forEach(detach_dev);
			t189 = claim_text(span78_nodes, ">");
			span78_nodes.forEach(detach_dev);
			t190 = claim_text(span106_nodes, "\n            ...Your markup here\n        ");
			span80 = claim_element(span106_nodes, "SPAN", { class: true });
			var span80_nodes = children(span80);
			t191 = claim_text(span80_nodes, "</");
			span79 = claim_element(span80_nodes, "SPAN", { class: true });
			var span79_nodes = children(span79);
			t192 = claim_text(span79_nodes, "FullpageSlide");
			span79_nodes.forEach(detach_dev);
			t193 = claim_text(span80_nodes, ">");
			span80_nodes.forEach(detach_dev);
			t194 = claim_text(span106_nodes, "\n        ");
			span85 = claim_element(span106_nodes, "SPAN", { class: true });
			var span85_nodes = children(span85);
			t195 = claim_text(span85_nodes, "<");
			span81 = claim_element(span85_nodes, "SPAN", { class: true });
			var span81_nodes = children(span81);
			t196 = claim_text(span81_nodes, "FullpageSlide");
			span81_nodes.forEach(detach_dev);
			t197 = claim_text(span85_nodes, " ");
			span82 = claim_element(span85_nodes, "SPAN", { class: true });
			var span82_nodes = children(span82);
			t198 = claim_text(span82_nodes, "slideId");
			span82_nodes.forEach(detach_dev);
			t199 = claim_text(span85_nodes, "=");
			span83 = claim_element(span85_nodes, "SPAN", { class: true });
			var span83_nodes = children(span83);
			t200 = claim_text(span83_nodes, "\"2\"");
			span83_nodes.forEach(detach_dev);
			t201 = claim_text(span85_nodes, " ");
			span84 = claim_element(span85_nodes, "SPAN", { class: true });
			var span84_nodes = children(span84);
			t202 = claim_text(span84_nodes, "bind:activeSlide");
			span84_nodes.forEach(detach_dev);
			t203 = claim_text(span85_nodes, ">");
			span85_nodes.forEach(detach_dev);
			t204 = claim_text(span106_nodes, "\n            ...Your markup here\n        ");
			span87 = claim_element(span106_nodes, "SPAN", { class: true });
			var span87_nodes = children(span87);
			t205 = claim_text(span87_nodes, "</");
			span86 = claim_element(span87_nodes, "SPAN", { class: true });
			var span86_nodes = children(span86);
			t206 = claim_text(span86_nodes, "FullpageSlide");
			span86_nodes.forEach(detach_dev);
			t207 = claim_text(span87_nodes, ">");
			span87_nodes.forEach(detach_dev);
			t208 = claim_text(span106_nodes, "\n    ");
			span89 = claim_element(span106_nodes, "SPAN", { class: true });
			var span89_nodes = children(span89);
			t209 = claim_text(span89_nodes, "</");
			span88 = claim_element(span89_nodes, "SPAN", { class: true });
			var span88_nodes = children(span88);
			t210 = claim_text(span88_nodes, "FullpageSection");
			span88_nodes.forEach(detach_dev);
			t211 = claim_text(span89_nodes, ">");
			span89_nodes.forEach(detach_dev);
			t212 = claim_text(span106_nodes, "\n    ");
			span94 = claim_element(span106_nodes, "SPAN", { class: true });
			var span94_nodes = children(span94);
			t213 = claim_text(span94_nodes, "<");
			span90 = claim_element(span94_nodes, "SPAN", { class: true });
			var span90_nodes = children(span90);
			t214 = claim_text(span90_nodes, "FullpageSection");
			span90_nodes.forEach(detach_dev);
			t215 = claim_text(span94_nodes, " ");
			span91 = claim_element(span94_nodes, "SPAN", { class: true });
			var span91_nodes = children(span91);
			t216 = claim_text(span91_nodes, "sectionId");
			span91_nodes.forEach(detach_dev);
			t217 = claim_text(span94_nodes, "=");
			span92 = claim_element(span94_nodes, "SPAN", { class: true });
			var span92_nodes = children(span92);
			t218 = claim_text(span92_nodes, "\"2\"");
			span92_nodes.forEach(detach_dev);
			t219 = claim_text(span94_nodes, " ");
			span93 = claim_element(span94_nodes, "SPAN", { class: true });
			var span93_nodes = children(span93);
			t220 = claim_text(span93_nodes, "bind:activeSection");
			span93_nodes.forEach(detach_dev);
			t221 = claim_text(span94_nodes, ">");
			span94_nodes.forEach(detach_dev);
			t222 = claim_text(span106_nodes, "\n        ...Your markup here\n    ");
			span96 = claim_element(span106_nodes, "SPAN", { class: true });
			var span96_nodes = children(span96);
			t223 = claim_text(span96_nodes, "</");
			span95 = claim_element(span96_nodes, "SPAN", { class: true });
			var span95_nodes = children(span95);
			t224 = claim_text(span95_nodes, "FullpageSection");
			span95_nodes.forEach(detach_dev);
			t225 = claim_text(span96_nodes, ">");
			span96_nodes.forEach(detach_dev);
			t226 = claim_text(span106_nodes, "\n    ");
			span101 = claim_element(span106_nodes, "SPAN", { class: true });
			var span101_nodes = children(span101);
			t227 = claim_text(span101_nodes, "<");
			span97 = claim_element(span101_nodes, "SPAN", { class: true });
			var span97_nodes = children(span97);
			t228 = claim_text(span97_nodes, "FullpageSection");
			span97_nodes.forEach(detach_dev);
			t229 = claim_text(span101_nodes, " ");
			span98 = claim_element(span101_nodes, "SPAN", { class: true });
			var span98_nodes = children(span98);
			t230 = claim_text(span98_nodes, "sectionId");
			span98_nodes.forEach(detach_dev);
			t231 = claim_text(span101_nodes, "=");
			span99 = claim_element(span101_nodes, "SPAN", { class: true });
			var span99_nodes = children(span99);
			t232 = claim_text(span99_nodes, "\"3\"");
			span99_nodes.forEach(detach_dev);
			t233 = claim_text(span101_nodes, " ");
			span100 = claim_element(span101_nodes, "SPAN", { class: true });
			var span100_nodes = children(span100);
			t234 = claim_text(span100_nodes, "bind:activeSection");
			span100_nodes.forEach(detach_dev);
			t235 = claim_text(span101_nodes, ">");
			span101_nodes.forEach(detach_dev);
			t236 = claim_text(span106_nodes, "\n        ...Your markup here\n    ");
			span103 = claim_element(span106_nodes, "SPAN", { class: true });
			var span103_nodes = children(span103);
			t237 = claim_text(span103_nodes, "</");
			span102 = claim_element(span103_nodes, "SPAN", { class: true });
			var span102_nodes = children(span102);
			t238 = claim_text(span102_nodes, "FullpageSection");
			span102_nodes.forEach(detach_dev);
			t239 = claim_text(span103_nodes, ">");
			span103_nodes.forEach(detach_dev);
			t240 = claim_text(span106_nodes, "\n");
			span105 = claim_element(span106_nodes, "SPAN", { class: true });
			var span105_nodes = children(span105);
			t241 = claim_text(span105_nodes, "</");
			span104 = claim_element(span105_nodes, "SPAN", { class: true });
			var span104_nodes = children(span104);
			t242 = claim_text(span104_nodes, "Fullpage");
			span104_nodes.forEach(detach_dev);
			t243 = claim_text(span105_nodes, ">");
			span105_nodes.forEach(detach_dev);
			span106_nodes.forEach(detach_dev);
			code9_nodes.forEach(detach_dev);
			pre1_nodes.forEach(detach_dev);
			t244 = claim_space(nodes);
			h32 = claim_element(nodes, "H3", { id: true });
			var h32_nodes = children(h32);
			t245 = claim_text(h32_nodes, "Tweaks");
			h32_nodes.forEach(detach_dev);
			t246 = claim_space(nodes);
			p4 = claim_element(nodes, "P", {});
			var p4_nodes = children(p4);
			t247 = claim_text(p4_nodes, "So, there are options for customizing your fullpage component.");
			p4_nodes.forEach(detach_dev);
			t248 = claim_space(nodes);
			h40 = claim_element(nodes, "H4", { id: true });
			var h40_nodes = children(h40);
			t249 = claim_text(h40_nodes, "Fullpage");
			h40_nodes.forEach(detach_dev);
			t250 = claim_space(nodes);
			p5 = claim_element(nodes, "P", {});
			var p5_nodes = children(p5);
			t251 = claim_text(p5_nodes, "These props are customizable:");
			p5_nodes.forEach(detach_dev);
			t252 = claim_space(nodes);
			ul0 = claim_element(nodes, "UL", {});
			var ul0_nodes = children(ul0);
			li5 = claim_element(ul0_nodes, "LI", {});
			var li5_nodes = children(li5);
			strong2 = claim_element(li5_nodes, "STRONG", {});
			var strong2_nodes = children(strong2);
			t253 = claim_text(strong2_nodes, "class");
			strong2_nodes.forEach(detach_dev);
			t254 = claim_text(li5_nodes, " - ");
			code10 = claim_element(li5_nodes, "CODE", {});
			var code10_nodes = children(code10);
			t255 = claim_text(code10_nodes, "string");
			code10_nodes.forEach(detach_dev);
			t256 = claim_text(li5_nodes, " - Standard HTML class");
			li5_nodes.forEach(detach_dev);
			t257 = claim_space(ul0_nodes);
			li6 = claim_element(ul0_nodes, "LI", {});
			var li6_nodes = children(li6);
			strong3 = claim_element(li6_nodes, "STRONG", {});
			var strong3_nodes = children(strong3);
			t258 = claim_text(strong3_nodes, "style");
			strong3_nodes.forEach(detach_dev);
			t259 = claim_text(li6_nodes, " - ");
			code11 = claim_element(li6_nodes, "CODE", {});
			var code11_nodes = children(code11);
			t260 = claim_text(code11_nodes, "string");
			code11_nodes.forEach(detach_dev);
			t261 = claim_text(li6_nodes, " - Standard HTML style");
			li6_nodes.forEach(detach_dev);
			t262 = claim_space(ul0_nodes);
			li7 = claim_element(ul0_nodes, "LI", {});
			var li7_nodes = children(li7);
			strong4 = claim_element(li7_nodes, "STRONG", {});
			var strong4_nodes = children(strong4);
			t263 = claim_text(strong4_nodes, "sections");
			strong4_nodes.forEach(detach_dev);
			t264 = claim_text(li7_nodes, " - ");
			code12 = claim_element(li7_nodes, "CODE", {});
			var code12_nodes = children(code12);
			t265 = claim_text(code12_nodes, "array");
			code12_nodes.forEach(detach_dev);
			t266 = claim_text(li7_nodes, " - Array containing FullpageSection components/names");
			li7_nodes.forEach(detach_dev);
			t267 = claim_space(ul0_nodes);
			li8 = claim_element(ul0_nodes, "LI", {});
			var li8_nodes = children(li8);
			strong5 = claim_element(li8_nodes, "STRONG", {});
			var strong5_nodes = children(strong5);
			t268 = claim_text(strong5_nodes, "activeSection");
			strong5_nodes.forEach(detach_dev);
			t269 = claim_text(li8_nodes, " - ");
			code13 = claim_element(li8_nodes, "CODE", {});
			var code13_nodes = children(code13);
			t270 = claim_text(code13_nodes, "number");
			code13_nodes.forEach(detach_dev);
			t271 = claim_text(li8_nodes, " - Number that points set visibility of sections.");
			li8_nodes.forEach(detach_dev);
			t272 = claim_space(ul0_nodes);
			li9 = claim_element(ul0_nodes, "LI", {});
			var li9_nodes = children(li9);
			strong6 = claim_element(li9_nodes, "STRONG", {});
			var strong6_nodes = children(strong6);
			t273 = claim_text(strong6_nodes, "transitionDuration");
			strong6_nodes.forEach(detach_dev);
			t274 = claim_text(li9_nodes, " - ");
			code14 = claim_element(li9_nodes, "CODE", {});
			var code14_nodes = children(code14);
			t275 = claim_text(code14_nodes, "number");
			code14_nodes.forEach(detach_dev);
			t276 = claim_text(li9_nodes, " - Duration of transition between sections");
			li9_nodes.forEach(detach_dev);
			t277 = claim_space(ul0_nodes);
			li10 = claim_element(ul0_nodes, "LI", {});
			var li10_nodes = children(li10);
			strong7 = claim_element(li10_nodes, "STRONG", {});
			var strong7_nodes = children(strong7);
			t278 = claim_text(strong7_nodes, "arrows");
			strong7_nodes.forEach(detach_dev);
			t279 = claim_text(li10_nodes, " - ");
			code15 = claim_element(li10_nodes, "CODE", {});
			var code15_nodes = children(code15);
			t280 = claim_text(code15_nodes, "boolean");
			code15_nodes.forEach(detach_dev);
			t281 = claim_text(li10_nodes, " - Adds support for scrolling using arrows");
			li10_nodes.forEach(detach_dev);
			t282 = claim_space(ul0_nodes);
			li11 = claim_element(ul0_nodes, "LI", {});
			var li11_nodes = children(li11);
			strong8 = claim_element(li11_nodes, "STRONG", {});
			var strong8_nodes = children(strong8);
			t283 = claim_text(strong8_nodes, "drag");
			strong8_nodes.forEach(detach_dev);
			t284 = claim_text(li11_nodes, " - ");
			code16 = claim_element(li11_nodes, "CODE", {});
			var code16_nodes = children(code16);
			t285 = claim_text(code16_nodes, "boolean");
			code16_nodes.forEach(detach_dev);
			t286 = claim_text(li11_nodes, " - Allows scrolling using mouse drag");
			li11_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			t287 = claim_space(nodes);
			h41 = claim_element(nodes, "H4", { id: true });
			var h41_nodes = children(h41);
			t288 = claim_text(h41_nodes, "FullpageSection");
			h41_nodes.forEach(detach_dev);
			t289 = claim_space(nodes);
			p6 = claim_element(nodes, "P", {});
			var p6_nodes = children(p6);
			t290 = claim_text(p6_nodes, "These props are customizable:");
			p6_nodes.forEach(detach_dev);
			t291 = claim_space(nodes);
			ul1 = claim_element(nodes, "UL", {});
			var ul1_nodes = children(ul1);
			li12 = claim_element(ul1_nodes, "LI", {});
			var li12_nodes = children(li12);
			strong9 = claim_element(li12_nodes, "STRONG", {});
			var strong9_nodes = children(strong9);
			t292 = claim_text(strong9_nodes, "class");
			strong9_nodes.forEach(detach_dev);
			t293 = claim_text(li12_nodes, " - ");
			code17 = claim_element(li12_nodes, "CODE", {});
			var code17_nodes = children(code17);
			t294 = claim_text(code17_nodes, "string");
			code17_nodes.forEach(detach_dev);
			t295 = claim_text(li12_nodes, " - Standard HTML class");
			li12_nodes.forEach(detach_dev);
			t296 = claim_space(ul1_nodes);
			li13 = claim_element(ul1_nodes, "LI", {});
			var li13_nodes = children(li13);
			strong10 = claim_element(li13_nodes, "STRONG", {});
			var strong10_nodes = children(strong10);
			t297 = claim_text(strong10_nodes, "style");
			strong10_nodes.forEach(detach_dev);
			t298 = claim_text(li13_nodes, " - ");
			code18 = claim_element(li13_nodes, "CODE", {});
			var code18_nodes = children(code18);
			t299 = claim_text(code18_nodes, "string");
			code18_nodes.forEach(detach_dev);
			t300 = claim_text(li13_nodes, " - Standard HTML style");
			li13_nodes.forEach(detach_dev);
			t301 = claim_space(ul1_nodes);
			li14 = claim_element(ul1_nodes, "LI", {});
			var li14_nodes = children(li14);
			strong11 = claim_element(li14_nodes, "STRONG", {});
			var strong11_nodes = children(strong11);
			t302 = claim_text(strong11_nodes, "sectionId");
			strong11_nodes.forEach(detach_dev);
			t303 = claim_text(li14_nodes, " - ");
			code19 = claim_element(li14_nodes, "CODE", {});
			var code19_nodes = children(code19);
			t304 = claim_text(code19_nodes, "number/string");
			code19_nodes.forEach(detach_dev);
			t305 = claim_text(li14_nodes, " - Id of section, feel free to enter there string, component will parse it to the number");
			li14_nodes.forEach(detach_dev);
			t306 = claim_space(ul1_nodes);
			li15 = claim_element(ul1_nodes, "LI", {});
			var li15_nodes = children(li15);
			strong12 = claim_element(li15_nodes, "STRONG", {});
			var strong12_nodes = children(strong12);
			t307 = claim_text(strong12_nodes, "activeSection");
			strong12_nodes.forEach(detach_dev);
			t308 = claim_text(li15_nodes, " - ");
			code20 = claim_element(li15_nodes, "CODE", {});
			var code20_nodes = children(code20);
			t309 = claim_text(code20_nodes, "number");
			code20_nodes.forEach(detach_dev);
			t310 = claim_text(li15_nodes, " - Number that tells section if is visible");
			li15_nodes.forEach(detach_dev);
			t311 = claim_space(ul1_nodes);
			li16 = claim_element(ul1_nodes, "LI", {});
			var li16_nodes = children(li16);
			strong13 = claim_element(li16_nodes, "STRONG", {});
			var strong13_nodes = children(strong13);
			t312 = claim_text(strong13_nodes, "slides");
			strong13_nodes.forEach(detach_dev);
			t313 = claim_text(li16_nodes, " - ");
			code21 = claim_element(li16_nodes, "CODE", {});
			var code21_nodes = children(code21);
			t314 = claim_text(code21_nodes, "array");
			code21_nodes.forEach(detach_dev);
			t315 = claim_text(li16_nodes, " - Array containing FullpageSlide components/names, if there are some");
			li16_nodes.forEach(detach_dev);
			t316 = claim_space(ul1_nodes);
			li17 = claim_element(ul1_nodes, "LI", {});
			var li17_nodes = children(li17);
			strong14 = claim_element(li17_nodes, "STRONG", {});
			var strong14_nodes = children(strong14);
			t317 = claim_text(strong14_nodes, "activeSlide");
			strong14_nodes.forEach(detach_dev);
			t318 = claim_text(li17_nodes, " - ");
			code22 = claim_element(li17_nodes, "CODE", {});
			var code22_nodes = children(code22);
			t319 = claim_text(code22_nodes, "string");
			code22_nodes.forEach(detach_dev);
			t320 = claim_text(li17_nodes, " - Number that tells slide if is visible");
			li17_nodes.forEach(detach_dev);
			t321 = claim_space(ul1_nodes);
			li18 = claim_element(ul1_nodes, "LI", {});
			var li18_nodes = children(li18);
			strong15 = claim_element(li18_nodes, "STRONG", {});
			var strong15_nodes = children(strong15);
			t322 = claim_text(strong15_nodes, "center");
			strong15_nodes.forEach(detach_dev);
			t323 = claim_text(li18_nodes, " - ");
			code23 = claim_element(li18_nodes, "CODE", {});
			var code23_nodes = children(code23);
			t324 = claim_text(code23_nodes, "boolean");
			code23_nodes.forEach(detach_dev);
			t325 = claim_text(li18_nodes, " - Centering content using flexbox");
			li18_nodes.forEach(detach_dev);
			t326 = claim_space(ul1_nodes);
			li19 = claim_element(ul1_nodes, "LI", {});
			var li19_nodes = children(li19);
			strong16 = claim_element(li19_nodes, "STRONG", {});
			var strong16_nodes = children(strong16);
			t327 = claim_text(strong16_nodes, "arrows");
			strong16_nodes.forEach(detach_dev);
			t328 = claim_text(li19_nodes, " - ");
			code24 = claim_element(li19_nodes, "CODE", {});
			var code24_nodes = children(code24);
			t329 = claim_text(code24_nodes, "boolean");
			code24_nodes.forEach(detach_dev);
			t330 = claim_text(li19_nodes, " - Adds support for sliding using arrows");
			li19_nodes.forEach(detach_dev);
			t331 = claim_space(ul1_nodes);
			li20 = claim_element(ul1_nodes, "LI", {});
			var li20_nodes = children(li20);
			strong17 = claim_element(li20_nodes, "STRONG", {});
			var strong17_nodes = children(strong17);
			t332 = claim_text(strong17_nodes, "select");
			strong17_nodes.forEach(detach_dev);
			t333 = claim_text(li20_nodes, " - ");
			code25 = claim_element(li20_nodes, "CODE", {});
			var code25_nodes = children(code25);
			t334 = claim_text(code25_nodes, "boolean");
			code25_nodes.forEach(detach_dev);
			t335 = claim_text(li20_nodes, " - Enables highlighting");
			li20_nodes.forEach(detach_dev);
			t336 = claim_space(ul1_nodes);
			li21 = claim_element(ul1_nodes, "LI", {});
			var li21_nodes = children(li21);
			strong18 = claim_element(li21_nodes, "STRONG", {});
			var strong18_nodes = children(strong18);
			t337 = claim_text(strong18_nodes, "transitionDuration");
			strong18_nodes.forEach(detach_dev);
			t338 = claim_text(li21_nodes, " - ");
			code26 = claim_element(li21_nodes, "CODE", {});
			var code26_nodes = children(code26);
			t339 = claim_text(code26_nodes, "number");
			code26_nodes.forEach(detach_dev);
			t340 = claim_text(li21_nodes, " - Duration of transition between slides, if you want to edit it, edit it here rather than in\n        transition prop, because this alters cooldown between transitions.");
			li21_nodes.forEach(detach_dev);
			t341 = claim_space(ul1_nodes);
			li22 = claim_element(ul1_nodes, "LI", {});
			var li22_nodes = children(li22);
			strong19 = claim_element(li22_nodes, "STRONG", {});
			var strong19_nodes = children(strong19);
			t342 = claim_text(strong19_nodes, "transition");
			strong19_nodes.forEach(detach_dev);
			t343 = claim_text(li22_nodes, " - ");
			code27 = claim_element(li22_nodes, "CODE", {});
			var code27_nodes = children(code27);
			t344 = claim_text(code27_nodes, "object");
			code27_nodes.forEach(detach_dev);
			t345 = claim_text(li22_nodes, " - Options for transitionOut between this sections");
			li22_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			t346 = claim_space(nodes);
			p7 = claim_element(nodes, "P", {});
			var p7_nodes = children(p7);
			strong20 = claim_element(p7_nodes, "STRONG", {});
			var strong20_nodes = children(strong20);
			em3 = claim_element(strong20_nodes, "EM", {});
			var em3_nodes = children(em3);
			t347 = claim_text(em3_nodes, "*These transitions are Svelte transitions, you can change only options, not type of\n    animation, because I hard-coded it there :D, may change in future .");
			em3_nodes.forEach(detach_dev);
			strong20_nodes.forEach(detach_dev);
			p7_nodes.forEach(detach_dev);
			t348 = claim_space(nodes);
			h42 = claim_element(nodes, "H4", { id: true });
			var h42_nodes = children(h42);
			t349 = claim_text(h42_nodes, "FullpageSlide");
			h42_nodes.forEach(detach_dev);
			t350 = claim_space(nodes);
			p8 = claim_element(nodes, "P", {});
			var p8_nodes = children(p8);
			t351 = claim_text(p8_nodes, "These props are customizable:");
			p8_nodes.forEach(detach_dev);
			t352 = claim_space(nodes);
			ul2 = claim_element(nodes, "UL", {});
			var ul2_nodes = children(ul2);
			li23 = claim_element(ul2_nodes, "LI", {});
			var li23_nodes = children(li23);
			strong21 = claim_element(li23_nodes, "STRONG", {});
			var strong21_nodes = children(strong21);
			t353 = claim_text(strong21_nodes, "class");
			strong21_nodes.forEach(detach_dev);
			t354 = claim_text(li23_nodes, " - ");
			code28 = claim_element(li23_nodes, "CODE", {});
			var code28_nodes = children(code28);
			t355 = claim_text(code28_nodes, "string");
			code28_nodes.forEach(detach_dev);
			t356 = claim_text(li23_nodes, " - Standard HTML class");
			li23_nodes.forEach(detach_dev);
			t357 = claim_space(ul2_nodes);
			li24 = claim_element(ul2_nodes, "LI", {});
			var li24_nodes = children(li24);
			strong22 = claim_element(li24_nodes, "STRONG", {});
			var strong22_nodes = children(strong22);
			t358 = claim_text(strong22_nodes, "style");
			strong22_nodes.forEach(detach_dev);
			t359 = claim_text(li24_nodes, " - ");
			code29 = claim_element(li24_nodes, "CODE", {});
			var code29_nodes = children(code29);
			t360 = claim_text(code29_nodes, "string");
			code29_nodes.forEach(detach_dev);
			t361 = claim_text(li24_nodes, " - Standard HTML style");
			li24_nodes.forEach(detach_dev);
			t362 = claim_space(ul2_nodes);
			li25 = claim_element(ul2_nodes, "LI", {});
			var li25_nodes = children(li25);
			strong23 = claim_element(li25_nodes, "STRONG", {});
			var strong23_nodes = children(strong23);
			t363 = claim_text(strong23_nodes, "slideId");
			strong23_nodes.forEach(detach_dev);
			t364 = claim_text(li25_nodes, " - ");
			code30 = claim_element(li25_nodes, "CODE", {});
			var code30_nodes = children(code30);
			t365 = claim_text(code30_nodes, "number/string");
			code30_nodes.forEach(detach_dev);
			t366 = claim_text(li25_nodes, " - Id of slide, same as section id, but this for slide, obviously");
			li25_nodes.forEach(detach_dev);
			t367 = claim_space(ul2_nodes);
			li26 = claim_element(ul2_nodes, "LI", {});
			var li26_nodes = children(li26);
			strong24 = claim_element(li26_nodes, "STRONG", {});
			var strong24_nodes = children(strong24);
			t368 = claim_text(strong24_nodes, "activeSlide");
			strong24_nodes.forEach(detach_dev);
			t369 = claim_text(li26_nodes, " - ");
			code31 = claim_element(li26_nodes, "CODE", {});
			var code31_nodes = children(code31);
			t370 = claim_text(code31_nodes, "string");
			code31_nodes.forEach(detach_dev);
			t371 = claim_text(li26_nodes, " - Number that tells slide if is visible");
			li26_nodes.forEach(detach_dev);
			t372 = claim_space(ul2_nodes);
			li27 = claim_element(ul2_nodes, "LI", {});
			var li27_nodes = children(li27);
			strong25 = claim_element(li27_nodes, "STRONG", {});
			var strong25_nodes = children(strong25);
			t373 = claim_text(strong25_nodes, "center");
			strong25_nodes.forEach(detach_dev);
			t374 = claim_text(li27_nodes, " - ");
			code32 = claim_element(li27_nodes, "CODE", {});
			var code32_nodes = children(code32);
			t375 = claim_text(code32_nodes, "number");
			code32_nodes.forEach(detach_dev);
			t376 = claim_text(li27_nodes, " - Centering content using flexbox");
			li27_nodes.forEach(detach_dev);
			t377 = claim_space(ul2_nodes);
			li28 = claim_element(ul2_nodes, "LI", {});
			var li28_nodes = children(li28);
			strong26 = claim_element(li28_nodes, "STRONG", {});
			var strong26_nodes = children(strong26);
			t378 = claim_text(strong26_nodes, "transitionIn");
			strong26_nodes.forEach(detach_dev);
			t379 = claim_text(li28_nodes, " - ");
			code33 = claim_element(li28_nodes, "CODE", {});
			var code33_nodes = children(code33);
			t380 = claim_text(code33_nodes, "object");
			code33_nodes.forEach(detach_dev);
			t381 = claim_text(li28_nodes, " - Options for transitionIn between this slides");
			li28_nodes.forEach(detach_dev);
			t382 = claim_space(ul2_nodes);
			li29 = claim_element(ul2_nodes, "LI", {});
			var li29_nodes = children(li29);
			strong27 = claim_element(li29_nodes, "STRONG", {});
			var strong27_nodes = children(strong27);
			t383 = claim_text(strong27_nodes, "transitionOut");
			strong27_nodes.forEach(detach_dev);
			t384 = claim_text(li29_nodes, " - ");
			code34 = claim_element(li29_nodes, "CODE", {});
			var code34_nodes = children(code34);
			t385 = claim_text(code34_nodes, "object");
			code34_nodes.forEach(detach_dev);
			t386 = claim_text(li29_nodes, " - Options for transitionOut between this slides");
			li29_nodes.forEach(detach_dev);
			ul2_nodes.forEach(detach_dev);
			t387 = claim_space(nodes);
			h23 = claim_element(nodes, "H2", { id: true });
			var h23_nodes = children(h23);
			t388 = claim_text(h23_nodes, "License");
			h23_nodes.forEach(detach_dev);
			t389 = claim_space(nodes);
			h33 = claim_element(nodes, "H3", { id: true });
			var h33_nodes = children(h33);
			t390 = claim_text(h33_nodes, "It's free");
			h33_nodes.forEach(detach_dev);
			t391 = claim_space(nodes);
			p9 = claim_element(nodes, "P", {});
			var p9_nodes = children(p9);
			t392 = claim_text(p9_nodes, "This component is under MIT license.");
			p9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "id", "svelte-fullpage");
			add_location(h1, file, 0, 0, 0);
			add_location(em0, file, 1, 11, 57);
			add_location(strong0, file, 1, 3, 49);
			add_location(p0, file, 1, 0, 46);
			add_location(em1, file, 2, 3, 97);
			add_location(p1, file, 2, 0, 94);
			add_location(p2, file, 3, 0, 141);
			attr_dev(h20, "id", "instalation");
			add_location(h20, file, 6, 0, 489);
			attr_dev(span0, "class", "hljs-built_in");
			add_location(span0, file, 8, 53, 593);
			attr_dev(span1, "class", "hljs-built_in");
			add_location(span1, file, 8, 93, 633);
			attr_dev(code0, "class", "lang-bash");
			add_location(code0, file, 8, 5, 545);
			add_location(pre0, file, 8, 0, 540);
			add_location(blockquote, file, 7, 0, 527);
			attr_dev(h21, "id", "versions-of-this-component");
			add_location(h21, file, 11, 0, 700);
			add_location(em2, file, 12, 23, 791);
			add_location(strong1, file, 12, 15, 783);
			add_location(p3, file, 12, 0, 768);
			attr_dev(h22, "id", "how-to-use");
			add_location(h22, file, 15, 0, 1110);
			attr_dev(h30, "id", "static-version");
			add_location(h30, file, 16, 0, 1146);
			add_location(li0, file, 18, 4, 1199);
			add_location(code1, file, 19, 16, 1241);
			add_location(li1, file, 19, 4, 1229);
			add_location(code2, file, 20, 49, 1413);
			add_location(code3, file, 20, 137, 1501);
			add_location(li2, file, 20, 4, 1368);
			add_location(code4, file, 22, 27, 1698);
			add_location(code5, file, 22, 91, 1762);
			add_location(li3, file, 21, 4, 1548);
			add_location(code6, file, 24, 21, 1976);
			add_location(code7, file, 25, 8, 2084);
			add_location(code8, file, 26, 8, 2198);
			add_location(li4, file, 23, 4, 1834);
			add_location(ol, file, 17, 0, 1190);
			attr_dev(h31, "id", "something-copyable");
			add_location(h31, file, 28, 0, 2300);
			attr_dev(span2, "class", "hljs-name");
			add_location(span2, file, 29, 74, 2426);
			attr_dev(span3, "class", "hljs-tag");
			add_location(span3, file, 29, 47, 2399);
			attr_dev(span4, "class", "hljs-comment");
			add_location(span4, file, 30, 4, 2506);
			attr_dev(span5, "class", "hljs-meta-keyword");
			add_location(span5, file, 31, 28, 2584);
			attr_dev(span6, "class", "hljs-meta");
			add_location(span6, file, 31, 4, 2560);
			attr_dev(span7, "class", "actionscript");
			add_location(span7, file, 29, 122, 2474);
			attr_dev(span8, "class", "xml");
			add_location(span8, file, 29, 29, 2381);
			attr_dev(span9, "class", "hljs-template-variable");
			add_location(span9, file, 31, 95, 2651);
			attr_dev(span10, "class", "hljs-keyword");
			add_location(span10, file, 35, 52, 2783);
			attr_dev(span11, "class", "hljs-string");
			add_location(span11, file, 35, 91, 2822);
			attr_dev(span12, "class", "hljs-comment");
			add_location(span12, file, 36, 4, 2878);
			attr_dev(span13, "class", "hljs-keyword");
			add_location(span13, file, 37, 4, 2932);
			attr_dev(span14, "class", "hljs-keyword");
			add_location(span14, file, 37, 54, 2982);
			attr_dev(span15, "class", "hljs-string");
			add_location(span15, file, 37, 93, 3021);
			attr_dev(span16, "class", "hljs-keyword");
			add_location(span16, file, 38, 4, 3097);
			attr_dev(span17, "class", "hljs-keyword");
			add_location(span17, file, 38, 61, 3154);
			attr_dev(span18, "class", "hljs-string");
			add_location(span18, file, 38, 100, 3193);
			attr_dev(span19, "class", "hljs-keyword");
			add_location(span19, file, 39, 4, 3275);
			attr_dev(span20, "class", "hljs-keyword");
			add_location(span20, file, 39, 59, 3330);
			attr_dev(span21, "class", "hljs-string");
			add_location(span21, file, 39, 98, 3369);
			attr_dev(span22, "class", "hljs-comment");
			add_location(span22, file, 41, 4, 3451);
			attr_dev(span23, "class", "hljs-keyword");
			add_location(span23, file, 42, 4, 3588);
			attr_dev(span24, "class", "hljs-string");
			add_location(span24, file, 43, 8, 3649);
			attr_dev(span25, "class", "hljs-string");
			add_location(span25, file, 44, 8, 3698);
			attr_dev(span26, "class", "hljs-string");
			add_location(span26, file, 45, 8, 3750);
			attr_dev(span27, "class", "hljs-string");
			add_location(span27, file, 46, 8, 3802);
			attr_dev(span28, "class", "hljs-comment");
			add_location(span28, file, 48, 4, 3855);
			attr_dev(span29, "class", "hljs-keyword");
			add_location(span29, file, 49, 4, 3992);
			attr_dev(span30, "class", "hljs-number");
			add_location(span30, file, 49, 58, 4046);
			attr_dev(span31, "class", "hljs-comment");
			add_location(span31, file, 51, 4, 4087);
			attr_dev(span32, "class", "hljs-keyword");
			add_location(span32, file, 52, 4, 4157);
			attr_dev(span33, "class", "hljs-string");
			add_location(span33, file, 53, 8, 4216);
			attr_dev(span34, "class", "hljs-string");
			add_location(span34, file, 54, 8, 4270);
			attr_dev(span35, "class", "hljs-string");
			add_location(span35, file, 55, 8, 4324);
			attr_dev(span36, "class", "hljs-comment");
			add_location(span36, file, 57, 4, 4383);
			attr_dev(span37, "class", "hljs-keyword");
			add_location(span37, file, 58, 4, 4464);
			attr_dev(span38, "class", "hljs-number");
			add_location(span38, file, 58, 56, 4516);
			attr_dev(span39, "class", "javascript");
			add_location(span39, file, 35, 26, 2757);
			attr_dev(span40, "class", "hljs-name");
			add_location(span40, file, 59, 35, 4587);
			attr_dev(span41, "class", "hljs-tag");
			add_location(span41, file, 59, 7, 4559);
			attr_dev(span42, "class", "hljs-name");
			add_location(span42, file, 61, 27, 4664);
			attr_dev(span43, "class", "hljs-attr");
			add_location(span43, file, 61, 67, 4704);
			attr_dev(span44, "class", "hljs-tag");
			add_location(span44, file, 61, 0, 4637);
			attr_dev(span45, "class", "xml");
			add_location(span45, file, 35, 8, 2739);
			attr_dev(span46, "class", "hljs-template-variable");
			add_location(span46, file, 61, 131, 4768);
			attr_dev(span47, "class", "hljs-attr");
			add_location(span47, file, 61, 227, 4864);
			attr_dev(span48, "class", "hljs-tag");
			add_location(span48, file, 61, 203, 4840);
			attr_dev(span49, "class", "hljs-name");
			add_location(span49, file, 62, 31, 4944);
			attr_dev(span50, "class", "hljs-attr");
			add_location(span50, file, 62, 78, 4991);
			attr_dev(span51, "class", "hljs-string");
			add_location(span51, file, 62, 119, 5032);
			attr_dev(span52, "class", "hljs-attr");
			add_location(span52, file, 62, 156, 5069);
			attr_dev(span53, "class", "hljs-attr");
			add_location(span53, file, 62, 206, 5119);
			attr_dev(span54, "class", "hljs-tag");
			add_location(span54, file, 62, 4, 4917);
			attr_dev(span55, "class", "hljs-name");
			add_location(span55, file, 64, 32, 5228);
			attr_dev(span56, "class", "hljs-tag");
			add_location(span56, file, 64, 4, 5200);
			attr_dev(span57, "class", "hljs-name");
			add_location(span57, file, 65, 31, 5317);
			attr_dev(span58, "class", "hljs-attr");
			add_location(span58, file, 65, 78, 5364);
			attr_dev(span59, "class", "hljs-string");
			add_location(span59, file, 65, 119, 5405);
			attr_dev(span60, "class", "hljs-attr");
			add_location(span60, file, 65, 156, 5442);
			attr_dev(span61, "class", "hljs-attr");
			add_location(span61, file, 65, 206, 5492);
			attr_dev(span62, "class", "hljs-tag");
			add_location(span62, file, 65, 4, 5290);
			attr_dev(span63, "class", "xml");
			add_location(span63, file, 61, 185, 4822);
			attr_dev(span64, "class", "hljs-template-variable");
			add_location(span64, file, 65, 268, 5554);
			attr_dev(span65, "class", "hljs-attr");
			add_location(span65, file, 65, 362, 5648);
			attr_dev(span66, "class", "hljs-tag");
			add_location(span66, file, 65, 338, 5624);
			attr_dev(span67, "class", "hljs-name");
			add_location(span67, file, 66, 35, 5732);
			attr_dev(span68, "class", "hljs-attr");
			add_location(span68, file, 66, 80, 5777);
			attr_dev(span69, "class", "hljs-string");
			add_location(span69, file, 66, 119, 5816);
			attr_dev(span70, "class", "hljs-attr");
			add_location(span70, file, 66, 156, 5853);
			attr_dev(span71, "class", "hljs-tag");
			add_location(span71, file, 66, 8, 5705);
			attr_dev(span72, "class", "hljs-name");
			add_location(span72, file, 68, 36, 5980);
			attr_dev(span73, "class", "hljs-tag");
			add_location(span73, file, 68, 8, 5952);
			attr_dev(span74, "class", "hljs-name");
			add_location(span74, file, 69, 35, 6071);
			attr_dev(span75, "class", "hljs-attr");
			add_location(span75, file, 69, 80, 6116);
			attr_dev(span76, "class", "hljs-string");
			add_location(span76, file, 69, 119, 6155);
			attr_dev(span77, "class", "hljs-attr");
			add_location(span77, file, 69, 156, 6192);
			attr_dev(span78, "class", "hljs-tag");
			add_location(span78, file, 69, 8, 6044);
			attr_dev(span79, "class", "hljs-name");
			add_location(span79, file, 71, 36, 6319);
			attr_dev(span80, "class", "hljs-tag");
			add_location(span80, file, 71, 8, 6291);
			attr_dev(span81, "class", "hljs-name");
			add_location(span81, file, 72, 35, 6410);
			attr_dev(span82, "class", "hljs-attr");
			add_location(span82, file, 72, 80, 6455);
			attr_dev(span83, "class", "hljs-string");
			add_location(span83, file, 72, 119, 6494);
			attr_dev(span84, "class", "hljs-attr");
			add_location(span84, file, 72, 156, 6531);
			attr_dev(span85, "class", "hljs-tag");
			add_location(span85, file, 72, 8, 6383);
			attr_dev(span86, "class", "hljs-name");
			add_location(span86, file, 74, 36, 6658);
			attr_dev(span87, "class", "hljs-tag");
			add_location(span87, file, 74, 8, 6630);
			attr_dev(span88, "class", "hljs-name");
			add_location(span88, file, 75, 32, 6746);
			attr_dev(span89, "class", "hljs-tag");
			add_location(span89, file, 75, 4, 6718);
			attr_dev(span90, "class", "hljs-name");
			add_location(span90, file, 76, 31, 6835);
			attr_dev(span91, "class", "hljs-attr");
			add_location(span91, file, 76, 78, 6882);
			attr_dev(span92, "class", "hljs-string");
			add_location(span92, file, 76, 119, 6923);
			attr_dev(span93, "class", "hljs-attr");
			add_location(span93, file, 76, 156, 6960);
			attr_dev(span94, "class", "hljs-tag");
			add_location(span94, file, 76, 4, 6808);
			attr_dev(span95, "class", "hljs-name");
			add_location(span95, file, 78, 32, 7081);
			attr_dev(span96, "class", "hljs-tag");
			add_location(span96, file, 78, 4, 7053);
			attr_dev(span97, "class", "hljs-name");
			add_location(span97, file, 79, 31, 7170);
			attr_dev(span98, "class", "hljs-attr");
			add_location(span98, file, 79, 78, 7217);
			attr_dev(span99, "class", "hljs-string");
			add_location(span99, file, 79, 119, 7258);
			attr_dev(span100, "class", "hljs-attr");
			add_location(span100, file, 79, 156, 7295);
			attr_dev(span101, "class", "hljs-tag");
			add_location(span101, file, 79, 4, 7143);
			attr_dev(span102, "class", "hljs-name");
			add_location(span102, file, 81, 32, 7416);
			attr_dev(span103, "class", "hljs-tag");
			add_location(span103, file, 81, 4, 7388);
			attr_dev(span104, "class", "hljs-name");
			add_location(span104, file, 82, 28, 7502);
			attr_dev(span105, "class", "hljs-tag");
			add_location(span105, file, 82, 0, 7474);
			attr_dev(span106, "class", "xml");
			add_location(span106, file, 65, 320, 5606);
			attr_dev(code9, "class", "lang-html");
			add_location(code9, file, 29, 5, 2357);
			add_location(pre1, file, 29, 0, 2352);
			attr_dev(h32, "id", "tweaks");
			add_location(h32, file, 84, 0, 7574);
			add_location(p4, file, 85, 0, 7602);
			attr_dev(h40, "id", "fullpage");
			add_location(h40, file, 86, 0, 7672);
			add_location(p5, file, 87, 0, 7704);
			add_location(strong2, file, 89, 8, 7754);
			add_location(code10, file, 89, 33, 7779);
			add_location(li5, file, 89, 4, 7750);
			add_location(strong3, file, 90, 8, 7834);
			add_location(code11, file, 90, 33, 7859);
			add_location(li6, file, 90, 4, 7830);
			add_location(strong4, file, 91, 8, 7914);
			add_location(code12, file, 91, 36, 7942);
			add_location(li7, file, 91, 4, 7910);
			add_location(strong5, file, 92, 8, 8026);
			add_location(code13, file, 92, 41, 8059);
			add_location(li8, file, 92, 4, 8022);
			add_location(strong6, file, 93, 8, 8141);
			add_location(code14, file, 93, 46, 8179);
			add_location(li9, file, 93, 4, 8137);
			add_location(strong7, file, 94, 8, 8254);
			add_location(code15, file, 94, 34, 8280);
			add_location(li10, file, 94, 4, 8250);
			add_location(strong8, file, 95, 8, 8356);
			add_location(code16, file, 95, 32, 8380);
			add_location(li11, file, 95, 4, 8352);
			add_location(ul0, file, 88, 0, 7741);
			attr_dev(h41, "id", "fullpagesection");
			add_location(h41, file, 97, 0, 8448);
			add_location(p6, file, 98, 0, 8494);
			add_location(strong9, file, 100, 8, 8544);
			add_location(code17, file, 100, 33, 8569);
			add_location(li12, file, 100, 4, 8540);
			add_location(strong10, file, 101, 8, 8624);
			add_location(code18, file, 101, 33, 8649);
			add_location(li13, file, 101, 4, 8620);
			add_location(strong11, file, 102, 8, 8704);
			add_location(code19, file, 102, 37, 8733);
			add_location(li14, file, 102, 4, 8700);
			add_location(strong12, file, 103, 8, 8861);
			add_location(code20, file, 103, 41, 8894);
			add_location(li15, file, 103, 4, 8857);
			add_location(strong13, file, 104, 8, 8969);
			add_location(code21, file, 104, 34, 8995);
			add_location(li16, file, 104, 4, 8965);
			add_location(strong14, file, 105, 8, 9096);
			add_location(code22, file, 105, 39, 9127);
			add_location(li17, file, 105, 4, 9092);
			add_location(strong15, file, 106, 8, 9200);
			add_location(code23, file, 106, 34, 9226);
			add_location(li18, file, 106, 4, 9196);
			add_location(strong16, file, 107, 8, 9294);
			add_location(code24, file, 107, 34, 9320);
			add_location(li19, file, 107, 4, 9290);
			add_location(strong17, file, 108, 8, 9394);
			add_location(code25, file, 108, 34, 9420);
			add_location(li20, file, 108, 4, 9390);
			add_location(strong18, file, 109, 8, 9477);
			add_location(code26, file, 109, 46, 9515);
			add_location(li21, file, 109, 4, 9473);
			add_location(strong19, file, 111, 8, 9716);
			add_location(code27, file, 111, 38, 9746);
			add_location(li22, file, 111, 4, 9712);
			add_location(ul1, file, 99, 0, 8531);
			add_location(em3, file, 113, 11, 9838);
			add_location(strong20, file, 113, 3, 9830);
			add_location(p7, file, 113, 0, 9827);
			attr_dev(h42, "id", "fullpageslide");
			add_location(h42, file, 115, 0, 10016);
			add_location(p8, file, 116, 0, 10058);
			add_location(strong21, file, 118, 8, 10108);
			add_location(code28, file, 118, 33, 10133);
			add_location(li23, file, 118, 4, 10104);
			add_location(strong22, file, 119, 8, 10188);
			add_location(code29, file, 119, 33, 10213);
			add_location(li24, file, 119, 4, 10184);
			add_location(strong23, file, 120, 8, 10268);
			add_location(code30, file, 120, 35, 10295);
			add_location(li25, file, 120, 4, 10264);
			add_location(strong24, file, 121, 8, 10400);
			add_location(code31, file, 121, 39, 10431);
			add_location(li26, file, 121, 4, 10396);
			add_location(strong25, file, 122, 8, 10504);
			add_location(code32, file, 122, 34, 10530);
			add_location(li27, file, 122, 4, 10500);
			add_location(strong26, file, 123, 8, 10597);
			add_location(code33, file, 123, 40, 10629);
			add_location(li28, file, 123, 4, 10593);
			add_location(strong27, file, 124, 8, 10709);
			add_location(code34, file, 124, 41, 10742);
			add_location(li29, file, 124, 4, 10705);
			add_location(ul2, file, 117, 0, 10095);
			attr_dev(h23, "id", "license");
			add_location(h23, file, 126, 0, 10821);
			attr_dev(h33, "id", "it-s-free");
			add_location(h33, file, 127, 0, 10851);
			add_location(p9, file, 128, 0, 10889);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p0, anchor);
			append_dev(p0, strong0);
			append_dev(strong0, em0);
			append_dev(em0, t2);
			insert_dev(target, t3, anchor);
			insert_dev(target, p1, anchor);
			append_dev(p1, em1);
			append_dev(em1, t4);
			insert_dev(target, t5, anchor);
			insert_dev(target, p2, anchor);
			append_dev(p2, t6);
			insert_dev(target, t7, anchor);
			insert_dev(target, h20, anchor);
			append_dev(h20, t8);
			insert_dev(target, t9, anchor);
			insert_dev(target, blockquote, anchor);
			append_dev(blockquote, pre0);
			append_dev(pre0, code0);
			append_dev(code0, t10);
			append_dev(code0, span0);
			append_dev(span0, t11);
			append_dev(code0, t12);
			append_dev(code0, span1);
			append_dev(span1, t13);
			insert_dev(target, t14, anchor);
			insert_dev(target, h21, anchor);
			append_dev(h21, t15);
			insert_dev(target, t16, anchor);
			insert_dev(target, p3, anchor);
			append_dev(p3, t17);
			append_dev(p3, strong1);
			append_dev(strong1, em2);
			append_dev(em2, t18);
			append_dev(p3, t19);
			insert_dev(target, t20, anchor);
			insert_dev(target, h22, anchor);
			append_dev(h22, t21);
			insert_dev(target, t22, anchor);
			insert_dev(target, h30, anchor);
			append_dev(h30, t23);
			insert_dev(target, t24, anchor);
			insert_dev(target, ol, anchor);
			append_dev(ol, li0);
			append_dev(li0, t25);
			append_dev(ol, t26);
			append_dev(ol, li1);
			append_dev(li1, t27);
			append_dev(li1, code1);
			append_dev(code1, t28);
			append_dev(code1, t29);
			append_dev(code1, t30);
			append_dev(li1, t31);
			append_dev(ol, t32);
			append_dev(ol, li2);
			append_dev(li2, t33);
			append_dev(li2, code2);
			append_dev(code2, t34);
			append_dev(li2, t35);
			append_dev(li2, code3);
			append_dev(code3, t36);
			append_dev(li2, t37);
			append_dev(ol, t38);
			append_dev(ol, li3);
			append_dev(li3, t39);
			append_dev(li3, code4);
			append_dev(code4, t40);
			append_dev(code4, t41);
			append_dev(li3, t42);
			append_dev(li3, code5);
			append_dev(code5, t43);
			append_dev(code5, t44);
			append_dev(li3, t45);
			append_dev(ol, t46);
			append_dev(ol, li4);
			append_dev(li4, t47);
			append_dev(li4, code6);
			append_dev(code6, t48);
			append_dev(li4, t49);
			append_dev(li4, code7);
			append_dev(code7, t50);
			append_dev(li4, t51);
			append_dev(li4, code8);
			append_dev(code8, t52);
			append_dev(li4, t53);
			insert_dev(target, t54, anchor);
			insert_dev(target, h31, anchor);
			append_dev(h31, t55);
			insert_dev(target, t56, anchor);
			insert_dev(target, pre1, anchor);
			append_dev(pre1, code9);
			append_dev(code9, span8);
			append_dev(span8, span3);
			append_dev(span3, t57);
			append_dev(span3, span2);
			append_dev(span2, t58);
			append_dev(span3, t59);
			append_dev(span8, span7);
			append_dev(span7, span4);
			append_dev(span4, t60);
			append_dev(span7, t61);
			append_dev(span7, span6);
			append_dev(span6, span5);
			append_dev(span5, t62);
			append_dev(span6, t63);
			append_dev(code9, span9);
			append_dev(span9, t64);
			append_dev(code9, span45);
			append_dev(span45, span39);
			append_dev(span39, span10);
			append_dev(span10, t65);
			append_dev(span39, t66);
			append_dev(span39, span11);
			append_dev(span11, t67);
			append_dev(span39, t68);
			append_dev(span39, span12);
			append_dev(span12, t69);
			append_dev(span39, t70);
			append_dev(span39, span13);
			append_dev(span13, t71);
			append_dev(span39, t72);
			append_dev(span39, span14);
			append_dev(span14, t73);
			append_dev(span39, t74);
			append_dev(span39, span15);
			append_dev(span15, t75);
			append_dev(span39, t76);
			append_dev(span39, span16);
			append_dev(span16, t77);
			append_dev(span39, t78);
			append_dev(span39, span17);
			append_dev(span17, t79);
			append_dev(span39, t80);
			append_dev(span39, span18);
			append_dev(span18, t81);
			append_dev(span39, t82);
			append_dev(span39, span19);
			append_dev(span19, t83);
			append_dev(span39, t84);
			append_dev(span39, span20);
			append_dev(span20, t85);
			append_dev(span39, t86);
			append_dev(span39, span21);
			append_dev(span21, t87);
			append_dev(span39, t88);
			append_dev(span39, span22);
			append_dev(span22, t89);
			append_dev(span39, t90);
			append_dev(span39, span23);
			append_dev(span23, t91);
			append_dev(span39, t92);
			append_dev(span39, span24);
			append_dev(span24, t93);
			append_dev(span39, t94);
			append_dev(span39, span25);
			append_dev(span25, t95);
			append_dev(span39, t96);
			append_dev(span39, span26);
			append_dev(span26, t97);
			append_dev(span39, t98);
			append_dev(span39, span27);
			append_dev(span27, t99);
			append_dev(span39, t100);
			append_dev(span39, span28);
			append_dev(span28, t101);
			append_dev(span39, t102);
			append_dev(span39, span29);
			append_dev(span29, t103);
			append_dev(span39, t104);
			append_dev(span39, span30);
			append_dev(span30, t105);
			append_dev(span39, t106);
			append_dev(span39, span31);
			append_dev(span31, t107);
			append_dev(span39, t108);
			append_dev(span39, span32);
			append_dev(span32, t109);
			append_dev(span39, t110);
			append_dev(span39, span33);
			append_dev(span33, t111);
			append_dev(span39, t112);
			append_dev(span39, span34);
			append_dev(span34, t113);
			append_dev(span39, t114);
			append_dev(span39, span35);
			append_dev(span35, t115);
			append_dev(span39, t116);
			append_dev(span39, span36);
			append_dev(span36, t117);
			append_dev(span39, t118);
			append_dev(span39, span37);
			append_dev(span37, t119);
			append_dev(span39, t120);
			append_dev(span39, span38);
			append_dev(span38, t121);
			append_dev(span39, t122);
			append_dev(span45, span41);
			append_dev(span41, t123);
			append_dev(span41, span40);
			append_dev(span40, t124);
			append_dev(span41, t125);
			append_dev(span45, t126);
			append_dev(span45, span44);
			append_dev(span44, t127);
			append_dev(span44, span42);
			append_dev(span42, t128);
			append_dev(span44, t129);
			append_dev(span44, span43);
			append_dev(span43, t130);
			append_dev(span44, t131);
			append_dev(code9, span46);
			append_dev(span46, t132);
			append_dev(code9, span63);
			append_dev(span63, span48);
			append_dev(span48, span47);
			append_dev(span47, t133);
			append_dev(span48, t134);
			append_dev(span63, t135);
			append_dev(span63, span54);
			append_dev(span54, t136);
			append_dev(span54, span49);
			append_dev(span49, t137);
			append_dev(span54, t138);
			append_dev(span54, span50);
			append_dev(span50, t139);
			append_dev(span54, t140);
			append_dev(span54, span51);
			append_dev(span51, t141);
			append_dev(span54, t142);
			append_dev(span54, span52);
			append_dev(span52, t143);
			append_dev(span54, t144);
			append_dev(span54, span53);
			append_dev(span53, t145);
			append_dev(span54, t146);
			append_dev(span63, t147);
			append_dev(span63, span56);
			append_dev(span56, t148);
			append_dev(span56, span55);
			append_dev(span55, t149);
			append_dev(span56, t150);
			append_dev(span63, t151);
			append_dev(span63, span62);
			append_dev(span62, t152);
			append_dev(span62, span57);
			append_dev(span57, t153);
			append_dev(span62, t154);
			append_dev(span62, span58);
			append_dev(span58, t155);
			append_dev(span62, t156);
			append_dev(span62, span59);
			append_dev(span59, t157);
			append_dev(span62, t158);
			append_dev(span62, span60);
			append_dev(span60, t159);
			append_dev(span62, t160);
			append_dev(span62, span61);
			append_dev(span61, t161);
			append_dev(span62, t162);
			append_dev(code9, span64);
			append_dev(span64, t163);
			append_dev(code9, span106);
			append_dev(span106, span66);
			append_dev(span66, span65);
			append_dev(span65, t164);
			append_dev(span66, t165);
			append_dev(span106, t166);
			append_dev(span106, span71);
			append_dev(span71, t167);
			append_dev(span71, span67);
			append_dev(span67, t168);
			append_dev(span71, t169);
			append_dev(span71, span68);
			append_dev(span68, t170);
			append_dev(span71, t171);
			append_dev(span71, span69);
			append_dev(span69, t172);
			append_dev(span71, t173);
			append_dev(span71, span70);
			append_dev(span70, t174);
			append_dev(span71, t175);
			append_dev(span106, t176);
			append_dev(span106, span73);
			append_dev(span73, t177);
			append_dev(span73, span72);
			append_dev(span72, t178);
			append_dev(span73, t179);
			append_dev(span106, t180);
			append_dev(span106, span78);
			append_dev(span78, t181);
			append_dev(span78, span74);
			append_dev(span74, t182);
			append_dev(span78, t183);
			append_dev(span78, span75);
			append_dev(span75, t184);
			append_dev(span78, t185);
			append_dev(span78, span76);
			append_dev(span76, t186);
			append_dev(span78, t187);
			append_dev(span78, span77);
			append_dev(span77, t188);
			append_dev(span78, t189);
			append_dev(span106, t190);
			append_dev(span106, span80);
			append_dev(span80, t191);
			append_dev(span80, span79);
			append_dev(span79, t192);
			append_dev(span80, t193);
			append_dev(span106, t194);
			append_dev(span106, span85);
			append_dev(span85, t195);
			append_dev(span85, span81);
			append_dev(span81, t196);
			append_dev(span85, t197);
			append_dev(span85, span82);
			append_dev(span82, t198);
			append_dev(span85, t199);
			append_dev(span85, span83);
			append_dev(span83, t200);
			append_dev(span85, t201);
			append_dev(span85, span84);
			append_dev(span84, t202);
			append_dev(span85, t203);
			append_dev(span106, t204);
			append_dev(span106, span87);
			append_dev(span87, t205);
			append_dev(span87, span86);
			append_dev(span86, t206);
			append_dev(span87, t207);
			append_dev(span106, t208);
			append_dev(span106, span89);
			append_dev(span89, t209);
			append_dev(span89, span88);
			append_dev(span88, t210);
			append_dev(span89, t211);
			append_dev(span106, t212);
			append_dev(span106, span94);
			append_dev(span94, t213);
			append_dev(span94, span90);
			append_dev(span90, t214);
			append_dev(span94, t215);
			append_dev(span94, span91);
			append_dev(span91, t216);
			append_dev(span94, t217);
			append_dev(span94, span92);
			append_dev(span92, t218);
			append_dev(span94, t219);
			append_dev(span94, span93);
			append_dev(span93, t220);
			append_dev(span94, t221);
			append_dev(span106, t222);
			append_dev(span106, span96);
			append_dev(span96, t223);
			append_dev(span96, span95);
			append_dev(span95, t224);
			append_dev(span96, t225);
			append_dev(span106, t226);
			append_dev(span106, span101);
			append_dev(span101, t227);
			append_dev(span101, span97);
			append_dev(span97, t228);
			append_dev(span101, t229);
			append_dev(span101, span98);
			append_dev(span98, t230);
			append_dev(span101, t231);
			append_dev(span101, span99);
			append_dev(span99, t232);
			append_dev(span101, t233);
			append_dev(span101, span100);
			append_dev(span100, t234);
			append_dev(span101, t235);
			append_dev(span106, t236);
			append_dev(span106, span103);
			append_dev(span103, t237);
			append_dev(span103, span102);
			append_dev(span102, t238);
			append_dev(span103, t239);
			append_dev(span106, t240);
			append_dev(span106, span105);
			append_dev(span105, t241);
			append_dev(span105, span104);
			append_dev(span104, t242);
			append_dev(span105, t243);
			insert_dev(target, t244, anchor);
			insert_dev(target, h32, anchor);
			append_dev(h32, t245);
			insert_dev(target, t246, anchor);
			insert_dev(target, p4, anchor);
			append_dev(p4, t247);
			insert_dev(target, t248, anchor);
			insert_dev(target, h40, anchor);
			append_dev(h40, t249);
			insert_dev(target, t250, anchor);
			insert_dev(target, p5, anchor);
			append_dev(p5, t251);
			insert_dev(target, t252, anchor);
			insert_dev(target, ul0, anchor);
			append_dev(ul0, li5);
			append_dev(li5, strong2);
			append_dev(strong2, t253);
			append_dev(li5, t254);
			append_dev(li5, code10);
			append_dev(code10, t255);
			append_dev(li5, t256);
			append_dev(ul0, t257);
			append_dev(ul0, li6);
			append_dev(li6, strong3);
			append_dev(strong3, t258);
			append_dev(li6, t259);
			append_dev(li6, code11);
			append_dev(code11, t260);
			append_dev(li6, t261);
			append_dev(ul0, t262);
			append_dev(ul0, li7);
			append_dev(li7, strong4);
			append_dev(strong4, t263);
			append_dev(li7, t264);
			append_dev(li7, code12);
			append_dev(code12, t265);
			append_dev(li7, t266);
			append_dev(ul0, t267);
			append_dev(ul0, li8);
			append_dev(li8, strong5);
			append_dev(strong5, t268);
			append_dev(li8, t269);
			append_dev(li8, code13);
			append_dev(code13, t270);
			append_dev(li8, t271);
			append_dev(ul0, t272);
			append_dev(ul0, li9);
			append_dev(li9, strong6);
			append_dev(strong6, t273);
			append_dev(li9, t274);
			append_dev(li9, code14);
			append_dev(code14, t275);
			append_dev(li9, t276);
			append_dev(ul0, t277);
			append_dev(ul0, li10);
			append_dev(li10, strong7);
			append_dev(strong7, t278);
			append_dev(li10, t279);
			append_dev(li10, code15);
			append_dev(code15, t280);
			append_dev(li10, t281);
			append_dev(ul0, t282);
			append_dev(ul0, li11);
			append_dev(li11, strong8);
			append_dev(strong8, t283);
			append_dev(li11, t284);
			append_dev(li11, code16);
			append_dev(code16, t285);
			append_dev(li11, t286);
			insert_dev(target, t287, anchor);
			insert_dev(target, h41, anchor);
			append_dev(h41, t288);
			insert_dev(target, t289, anchor);
			insert_dev(target, p6, anchor);
			append_dev(p6, t290);
			insert_dev(target, t291, anchor);
			insert_dev(target, ul1, anchor);
			append_dev(ul1, li12);
			append_dev(li12, strong9);
			append_dev(strong9, t292);
			append_dev(li12, t293);
			append_dev(li12, code17);
			append_dev(code17, t294);
			append_dev(li12, t295);
			append_dev(ul1, t296);
			append_dev(ul1, li13);
			append_dev(li13, strong10);
			append_dev(strong10, t297);
			append_dev(li13, t298);
			append_dev(li13, code18);
			append_dev(code18, t299);
			append_dev(li13, t300);
			append_dev(ul1, t301);
			append_dev(ul1, li14);
			append_dev(li14, strong11);
			append_dev(strong11, t302);
			append_dev(li14, t303);
			append_dev(li14, code19);
			append_dev(code19, t304);
			append_dev(li14, t305);
			append_dev(ul1, t306);
			append_dev(ul1, li15);
			append_dev(li15, strong12);
			append_dev(strong12, t307);
			append_dev(li15, t308);
			append_dev(li15, code20);
			append_dev(code20, t309);
			append_dev(li15, t310);
			append_dev(ul1, t311);
			append_dev(ul1, li16);
			append_dev(li16, strong13);
			append_dev(strong13, t312);
			append_dev(li16, t313);
			append_dev(li16, code21);
			append_dev(code21, t314);
			append_dev(li16, t315);
			append_dev(ul1, t316);
			append_dev(ul1, li17);
			append_dev(li17, strong14);
			append_dev(strong14, t317);
			append_dev(li17, t318);
			append_dev(li17, code22);
			append_dev(code22, t319);
			append_dev(li17, t320);
			append_dev(ul1, t321);
			append_dev(ul1, li18);
			append_dev(li18, strong15);
			append_dev(strong15, t322);
			append_dev(li18, t323);
			append_dev(li18, code23);
			append_dev(code23, t324);
			append_dev(li18, t325);
			append_dev(ul1, t326);
			append_dev(ul1, li19);
			append_dev(li19, strong16);
			append_dev(strong16, t327);
			append_dev(li19, t328);
			append_dev(li19, code24);
			append_dev(code24, t329);
			append_dev(li19, t330);
			append_dev(ul1, t331);
			append_dev(ul1, li20);
			append_dev(li20, strong17);
			append_dev(strong17, t332);
			append_dev(li20, t333);
			append_dev(li20, code25);
			append_dev(code25, t334);
			append_dev(li20, t335);
			append_dev(ul1, t336);
			append_dev(ul1, li21);
			append_dev(li21, strong18);
			append_dev(strong18, t337);
			append_dev(li21, t338);
			append_dev(li21, code26);
			append_dev(code26, t339);
			append_dev(li21, t340);
			append_dev(ul1, t341);
			append_dev(ul1, li22);
			append_dev(li22, strong19);
			append_dev(strong19, t342);
			append_dev(li22, t343);
			append_dev(li22, code27);
			append_dev(code27, t344);
			append_dev(li22, t345);
			insert_dev(target, t346, anchor);
			insert_dev(target, p7, anchor);
			append_dev(p7, strong20);
			append_dev(strong20, em3);
			append_dev(em3, t347);
			insert_dev(target, t348, anchor);
			insert_dev(target, h42, anchor);
			append_dev(h42, t349);
			insert_dev(target, t350, anchor);
			insert_dev(target, p8, anchor);
			append_dev(p8, t351);
			insert_dev(target, t352, anchor);
			insert_dev(target, ul2, anchor);
			append_dev(ul2, li23);
			append_dev(li23, strong21);
			append_dev(strong21, t353);
			append_dev(li23, t354);
			append_dev(li23, code28);
			append_dev(code28, t355);
			append_dev(li23, t356);
			append_dev(ul2, t357);
			append_dev(ul2, li24);
			append_dev(li24, strong22);
			append_dev(strong22, t358);
			append_dev(li24, t359);
			append_dev(li24, code29);
			append_dev(code29, t360);
			append_dev(li24, t361);
			append_dev(ul2, t362);
			append_dev(ul2, li25);
			append_dev(li25, strong23);
			append_dev(strong23, t363);
			append_dev(li25, t364);
			append_dev(li25, code30);
			append_dev(code30, t365);
			append_dev(li25, t366);
			append_dev(ul2, t367);
			append_dev(ul2, li26);
			append_dev(li26, strong24);
			append_dev(strong24, t368);
			append_dev(li26, t369);
			append_dev(li26, code31);
			append_dev(code31, t370);
			append_dev(li26, t371);
			append_dev(ul2, t372);
			append_dev(ul2, li27);
			append_dev(li27, strong25);
			append_dev(strong25, t373);
			append_dev(li27, t374);
			append_dev(li27, code32);
			append_dev(code32, t375);
			append_dev(li27, t376);
			append_dev(ul2, t377);
			append_dev(ul2, li28);
			append_dev(li28, strong26);
			append_dev(strong26, t378);
			append_dev(li28, t379);
			append_dev(li28, code33);
			append_dev(code33, t380);
			append_dev(li28, t381);
			append_dev(ul2, t382);
			append_dev(ul2, li29);
			append_dev(li29, strong27);
			append_dev(strong27, t383);
			append_dev(li29, t384);
			append_dev(li29, code34);
			append_dev(code34, t385);
			append_dev(li29, t386);
			insert_dev(target, t387, anchor);
			insert_dev(target, h23, anchor);
			append_dev(h23, t388);
			insert_dev(target, t389, anchor);
			insert_dev(target, h33, anchor);
			append_dev(h33, t390);
			insert_dev(target, t391, anchor);
			insert_dev(target, p9, anchor);
			append_dev(p9, t392);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(p1);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(p2);
			if (detaching) detach_dev(t7);
			if (detaching) detach_dev(h20);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(blockquote);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(h21);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(p3);
			if (detaching) detach_dev(t20);
			if (detaching) detach_dev(h22);
			if (detaching) detach_dev(t22);
			if (detaching) detach_dev(h30);
			if (detaching) detach_dev(t24);
			if (detaching) detach_dev(ol);
			if (detaching) detach_dev(t54);
			if (detaching) detach_dev(h31);
			if (detaching) detach_dev(t56);
			if (detaching) detach_dev(pre1);
			if (detaching) detach_dev(t244);
			if (detaching) detach_dev(h32);
			if (detaching) detach_dev(t246);
			if (detaching) detach_dev(p4);
			if (detaching) detach_dev(t248);
			if (detaching) detach_dev(h40);
			if (detaching) detach_dev(t250);
			if (detaching) detach_dev(p5);
			if (detaching) detach_dev(t252);
			if (detaching) detach_dev(ul0);
			if (detaching) detach_dev(t287);
			if (detaching) detach_dev(h41);
			if (detaching) detach_dev(t289);
			if (detaching) detach_dev(p6);
			if (detaching) detach_dev(t291);
			if (detaching) detach_dev(ul1);
			if (detaching) detach_dev(t346);
			if (detaching) detach_dev(p7);
			if (detaching) detach_dev(t348);
			if (detaching) detach_dev(h42);
			if (detaching) detach_dev(t350);
			if (detaching) detach_dev(p8);
			if (detaching) detach_dev(t352);
			if (detaching) detach_dev(ul2);
			if (detaching) detach_dev(t387);
			if (detaching) detach_dev(h23);
			if (detaching) detach_dev(t389);
			if (detaching) detach_dev(h33);
			if (detaching) detach_dev(t391);
			if (detaching) detach_dev(p9);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Readme> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Readme", $$slots, []);
	return [];
}

class Readme extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Readme",
			options,
			id: create_fragment.name
		});
	}
}

export default Readme;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
